{
  "proposals": [
    {
      "slides": "",
      "votes": 1,
      "name": "84-python-and-gis",
      "links": "",
      "title": "Python and GIS",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/84-python-and-gis",
      "section": "_Others",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Jaisathish kumar",
      "phone": null,
      "speaker": "Jaisathish kumar",
      "submitted": "2012-08-25T18:10:46",
      "bio": "Know about me at\r\nhttp://in.linkedin.com/in/jaisathishkumar",
      "objective": "Understanding the basic terminologies of GIS and Explore the world of GIS using Python",
      "type": "Talk",
      "id": 84,
      "description": "Talk would explore the GIS basics and terminologies briefly. then would see through the tools & libraries available in python to explore the world of GIS. Demo of simple map application using python."
    },
    {
      "slides": "",
      "votes": 5,
      "name": "83-jython-python-for-java-platform",
      "links": "",
      "title": "Jython - Python for Java Platform",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/83-jython-python-for-java-platform",
      "section": "Core Python",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Biju",
      "phone": null,
      "speaker": "Biju",
      "submitted": "2012-08-25T16:52:55",
      "bio": "Biju.B Works in the field of Text Mining. His areas of interest are Natural Language Processing, Machine Learning, Sentiment Analysis, Big Data, Hadoop, NOSQL and Open Source Technologies.",
      "objective": "This tutorial aims at introducing the students and professional to Jython.",
      "type": "Tutorial",
      "id": 83,
      "description": "Tutorial Covers: Introduction to Jython, Java objects and methods in Jython, Jython import statements, Event handling, Overloaded Java methods, Classes in Jython,Public vs. private variables, Subclassing and inheritance, Simulating interfaces with multiple inheritance, Static final classes"
    },
    {
      "slides": "http://www.slideshare.net/pavankumar4uin/test-automation-made-easy-with-staf-and-python",
      "votes": 2,
      "name": "82-test-automation-made-easy-with-staf-and-python",
      "links": "http://in.linkedin.com/in/pavanpvrs",
      "title": "Test Automation made easy with STAF and Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/82-test-automation-made-easy-with-staf-and-python",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "pavan kumar",
      "phone": null,
      "speaker": "pavan kumar",
      "submitted": "2012-08-25T15:03:34",
      "bio": "Working as Technical specialist with 11 years of experience in test automation and 7 years experience in using python for different projects.",
      "objective": "This talk helps in how a tester can use python code using STAF SDK and run the automation tests on distributed environments.",
      "type": "Talk",
      "id": 82,
      "description": "Test automation is an integral part of software development cycle that helps in reduction in testing effort and helps in optimizing the testing across multiple platforms. However, to run the test automation across different configurations, automation framework is needed. Teams generally tries to adopt developing the automation framework or buying commercial test tools. \r\n\r\nIn this talk, I will go through how STAF(Software Test Automation Framework) can be utilized via python as generic automation framework without spending too much time on development of automation frameworks. A simple script of python can be used to run tests on multiple platforms."
    },
    {
      "slides": "",
      "votes": 5,
      "name": "81-hands-on-beginning-python",
      "links": "",
      "title": "Hands On Beginning Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/81-hands-on-beginning-python",
      "section": "Core Python",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Jaganadh Gopinadhan",
      "phone": null,
      "speaker": "Jaganadh Gopinadhan",
      "submitted": "2012-08-25T12:40:47",
      "bio": "Jaganadh G is a Text Analytics / Mining Researcher and Developer. His areas of interest are Text Mining / Analytics, Natural Language Processing, Machine Learning, Sentiment Analysis, Big-Date, Hadoop and Allied Technologies, NoSQL and Free and Open Source Software. He holds post graduate degree in Sanskrit Nyaya (Indian Logic) from University of Kerala. His ramblings on technological trends and book reviews can be found at http://jaganadhg.in .",
      "objective": "This is Python tutorial for students and professionals who would like to get a taste of Python programming.",
      "type": "Tutorial",
      "id": 81,
      "description": "The tutorial covers:\r\nIntroduction to Python\r\nREPL\r\nTypes\r\nMutable/Immutable\r\nGetting help\r\nLists\r\nDictionaries\r\nFunctions\r\nWhitespace\r\nConditionals & booleans\r\nIteration\r\nSlicing\r\nI/O\r\nClasses\r\nExceptions\r\nPackaging and layout"
    },
    {
      "slides": "",
      "votes": 10,
      "name": "80-evaluation-of-python-machine-learning-apis-for-text-classification",
      "links": "",
      "title": "Evaluation of Python Machine Learning APIS for Text Classification",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/80-evaluation-of-python-machine-learning-apis-for-text-classification",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Jaganadh Gopinadhan",
      "phone": null,
      "speaker": "Jaganadh Gopinadhan",
      "submitted": "2012-08-25T12:34:35",
      "bio": "Jaganadh G is a Text Analytics / Mining Researcher and Developer. His areas of interest are Text Mining / Analytics, Natural Language Processing, Machine Learning, Sentiment Analysis, Big-Date, Hadoop and Allied Technologies, NoSQL and Free and Open Source Software. He holds post graduate degree in Sanskrit Nyaya (Indian Logic) from University of Kerala. His ramblings on technological trends and book reviews can be found at http://jaganadhg.in .",
      "objective": "The proposed talk contains study on the capability of Python Machine Learning Libraries to deal with text classification. The talk evaluates classification algorithms implemented in NLTK and sklearn. ",
      "type": "Talk",
      "id": 80,
      "description": "This talk presents an empirical evaluation of text classification capabilities of two popular Python Machine Learning libraraies NLTK and sklearn. The study compares performance of different classification algorithms implemented in both of the libraries. At the same time the talk investigates the capability of thse tools to deal with social media text for classification task too.\r\n\r\nTalk outline \r\n\r\n1) Introduction to text classification \r\n2) Text Classification with skelarn\r\n3) Text Classification with NLTK\r\n4) Comparison of sklearn and NLTK\r\n5) Dealing with social media text\r\n6) Results and Discussions\r\n"
    },
    {
      "slides": "",
      "votes": 5,
      "name": "79-python-weds-elephant-an-introduction-to-map-reduce-programming-with-python",
      "links": "",
      "title": "Python weds Elephant : An Introduction to Map Reduce Programming with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/79-python-weds-elephant-an-introduction-to-map-reduce-programming-with-python",
      "section": "_Others",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Jaganadh Gopinadhan",
      "phone": null,
      "speaker": "Jaganadh Gopinadhan",
      "submitted": "2012-08-25T12:13:56",
      "bio": "Jaganadh G is a Text Analytics / Mining Researcher and Developer. His areas of interest are Text Mining / Analytics, Natural Language Processing, Machine Learning, Sentiment Analysis, Big-Date, Hadoop and Allied Technologies, NoSQL and Free and Open Source Software. He holds post graduate degree in Sanskrit Nyaya (Indian Logic) from University of Kerala. His ramblings on technological trends and book reviews can be found at http://jaganadhg.in .",
      "objective": "Objective of the proposed talk is to introduce Map Reduce programming for Hadoop in Python. The talk aims to give illustrative examples of Python based Hadoop and Map Reduce API's like Pydoop (http://pydoop.sourceforge.net/docs/) and MRjob (https://github.com/Yelp/mrjob). It aims to give an over all comparison of existing Pythonic Hadoop and Map Reduce APIS too.",
      "type": "Talk",
      "id": 79,
      "description": "Hadoop TM is a platform which provides distributed data storage and computing capabilities. The Hadoop ecosystem comes with a bunch of tools for dealing with big-data problems. The programming model for Hadoop architecture is called as Map Reduce programming. The very concept of Map and reduce programming exists in functional programming languages; it there in Python too. When Hadoop became a trend in Big-Data processing bunch of Python interfaces or APIs were developed for Map Programming and replicating some of the features of Hadoop such as HDFS and Map Reduce. The 'disco' and 'dumbo' projects are example for the same. The Hadoop architecture has a native support for running Python map reduce programs through the Hadoop streaming functionality. The proposed talk discusses different tools and techniques for running Python programs in a Hadoop ecosystem.\r\n\r\n\r\nTalk outline\r\n\r\n1) Introduction to HDFS\r\n2) Introduction to Map Reduce\r\n3) Hadoop Streaming\r\n4) MRJob and its features\r\n5) Dumbo and Disco \r\n6) Introduction to Pydoop\r\n5) Wrting Java like Map and Reduce programs with Pydoop\r\n6) Playing with Pydoop and HDFS\r\n7) Use cases of Python in the Hadoop Ecosystem\r\n"
    },
    {
      "slides": "",
      "votes": 3,
      "name": "78-advanced-task-management-with-celery",
      "links": "http://celeryproject.org/\r\nhttp://in.pycon.org/2010/talks/50-python-celery",
      "title": "Advanced task management with Celery",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/78-advanced-task-management-with-celery",
      "section": "Infrastructure",
      "level": "Advanced",
      "comments": 0,
      "email": null,
      "proposer": "Mahendra M",
      "phone": null,
      "speaker": "Mahendra M",
      "submitted": "2012-08-25T12:01:13",
      "bio": "Mahendra has been working on FOSS technologies since 1998 and is currently working as a Solutions Architect in Infosys. He has delivered talks in various FOSS conferences (FOSS.in, Linux-Bangalore and Bang!inux) on wide range of topics (Sysadmin, development, Linux kernel, NetBSD).\r\n\r\nMahendra has been developing server side products and solutions using Python for the last six years.\r\n\r\nHe has been involved in promoting FOSS technologies in various positions (BLUG co-ordinator, manager for FOSS.in, Linux Bangalore etc.)\r\n\r\nhttp://twitter.com/mahendra\r\n",
      "objective": "Celery is a really good framework for doing background task processing in Python (and other languages). While it is ridiculously easy to use celery, doing complex task flow has been a challenge in celery. (w.r.t task trees/graphs/dependecies etc.)\r\n\r\nThis talk introduces the audience to these challenges in celery and also explains how these can be fixed programmatically and by using latest features in Celery (3+)",
      "type": "Talk",
      "id": 78,
      "description": "Celery is a really good framework for doing background task processing in Python (and other languages). While it is ridiculously easy to use celery, doing complex task flow has been a challenge in celery. (w.r.t task trees/graphs/dependecies etc.)\r\n\r\nThis talk introduces the audience to these challenges in celery and also explains how these can be fixed programmatically and by using latest features in Celery (3+)\r\n\r\nThe talk will provide tips and tricks in handling real life celery programming related to\r\n\r\n* task routing\r\n* conflict management\r\n* long running tasks\r\n* task co-ordination\r\n* task dependencies\r\n* task monitoring\r\n* celery deployment and management\r\n* celery canvas\r\n\r\nThe talk will also touch upon celery batch tasks (which can be used as a simpler replacement to other systems like apache kafka)\r\n\r\nThe talk will also include demos for explaining various scenarious"
    },
    {
      "slides": "",
      "votes": 6,
      "name": "77-scaling-django-with-gevent",
      "links": "http://www.gevent.org/\r\nhttp://gunicorn.org/\r\nhttp://in.pycon.org/2010/talks/48-twisted-programming",
      "title": "Scaling Django with gevent",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/77-scaling-django-with-gevent",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Mahendra M",
      "phone": null,
      "speaker": "Mahendra M",
      "submitted": "2012-08-25T11:50:20",
      "bio": "Mahendra has been working on FOSS technologies since 1998 and is currently working as a Solutions Architect in Infosys. He has delivered talks in various FOSS conferences (FOSS.in, Linux-Bangalore and Bang!inux) on wide range of topics (Sysadmin, development, Linux kernel, NetBSD).\r\n\r\nMahendra has been developing server side products and solutions using Python for the last six years.\r\n\r\nHe has been involved in promoting FOSS technologies in various positions (BLUG co-ordinator, manager for FOSS.in, Linux Bangalore etc.)\r\n\r\nhttp://twitter.com/mahendra",
      "objective": "The objective of this talk is to introduce the audience to event driven programming with gevent and then to cover scenarios in django where gevent can be used for better scalability and load handling. This is helpful in cases where as part of a request handler, multiple n/w or I/O steps are executed in serial. However, these can be done in parallel using event driven frameworks like gevent, without losing the simplicity of the django framework and avoiding using complex event driven frameworks (such as twisted).\r\n\r\nThe talk will also cover the speaker's experiences (good and bad) with using other event driven frameworks (as explained in Pycon 2010 - http://in.pycon.org/2010/talks/48-twisted-programming). \r\n\r\nThe talk will also cover our products' migration from twisted to gevent/django",
      "type": "Talk",
      "id": 77,
      "description": "The talk will cover the following\r\n\r\n* Basic Introduction to event driven programming with gevent\r\n* Scenarios in django which can make use of gevent\r\n* Using django + gevent - benefits and issues (w.r.t to db usage, concurrancy, complexity etc.)\r\n* Using django + gevent + celery\r\n* Running django + gevent sites - using gunicorn\r\n* A demo of performance improvements (if time permits)"
    },
    {
      "slides": "",
      "votes": 3,
      "name": "76-building-a-dropbox-clone-with-python",
      "links": "https://github.com/db42/PySyncIt",
      "title": "Building a Dropbox clone with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/76-building-a-dropbox-clone-with-python",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Dushyant Bansal",
      "phone": null,
      "speaker": "Dushyant Bansal",
      "submitted": "2012-08-25T11:01:02",
      "bio": "Dushyant is a software developer at directi during the day. Passionate about programming,  python is his language of choice for hobby projects. These days, he can be found experimenting with javascript.\r\n\r\nIn his previous life at IIT Delhi, he was actively involved in research work on operating systems. This interest arose from, and lead to his master's thesis  which mainly focussed on virtualization.",
      "objective": "Even though dropbox offers a lot more features, backup and file synchronization remain the core services. The objective of this session will be to teach/guide you to write a file synchronization \r\nand backup application from scratch\r\n\r\nOver last couple of years, lots of File synchronization applications have come into the market, the most popular being 'dropbox'.\r\nAs these products have matured, the technology/architecture behind these enterprise level applications have become complex.\r\n\r\n\r\nBut, building a simple application for personal use is not that hard, thanks to the python ecosystem and availability of\r\nlots of third party tools. And, the process is fun too.",
      "type": "Tutorial",
      "id": 76,
      "description": "PySyncIt will be used as reference project: https://github.com/db42/PySyncIt\r\n\r\n\r\nThis session will go step-by-step and touch these aspects: \r\n\r\n1. Definining a minimum desirable product and get started\r\n    - define the basic use cases that you want to cover\r\n    - precautions: open/close principle\r\n2. Deciding the application architecture\r\n3. Right tools for the job\r\n    - Interaction with user\r\n    - Persistence\r\n    - Logging - serving many purposes\r\n    - Collaboration and version-control\r\n4. Coding practices\r\n    - For your own good\r\n    - For others "
    },
    {
      "slides": "",
      "votes": 11,
      "name": "75-natural-language-processing-using-python",
      "links": "http://nltk.org/",
      "title": "Natural Language Processing using Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/75-natural-language-processing-using-python",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Shrinivasan T",
      "phone": null,
      "speaker": "Shrinivasan T",
      "submitted": "2012-08-25T08:23:54",
      "bio": "Shrinivasan works at CollabNet, providing technical support for Subversion. He codes in python for fun.",
      "objective": "Exploring the features of the Natural Langiage Toolkit for Python",
      "type": "Talk",
      "id": 75,
      "description": "The Natural Language Toolkit (NLTK) suite offers powerful tools for natural language processing and analysis. Like many other code libraries, it enables programmers to achieve results when working with data they may not be an expert in the handling of - in this case, human language. The NLTK is particularly valuable as human language skills are in general something programmers can get along without, and therefore they are likely to be ill-equipped with the tools to most effectively work with language data. However, while NLTK provides programmers with a way to work with all the relevant parts of language without needing to rely on their own grammar skills, there are many concepts in the field of natural language processing that require basic comprehension of natural language operation, which may make knowing where to start working with the NLTK difficult for the average programmer.\r\n\r\nThis presentation will demonstrate some of the NLTK's powerful and impressive features, while covering the concepts that will enable any programmer to work cool tricks on natural language. "
    },
    {
      "slides": "https://docs.google.com/open?id=0B918szg1Q0v-Z3R0QlRSVUMxajA",
      "votes": 18,
      "name": "74-python-programming-with-raspberry-pi-and-portable-python",
      "links": "http://www.electronicsforu.com/electronicsforu/video/detailvideo.asp?id=266\r\nhttp://electronicsrocks.com/speakers/samarth-shah/",
      "title": "Python programming with Raspberry Pi and Portable Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/74-python-programming-with-raspberry-pi-and-portable-python",
      "section": "Embedded/Real-time Python",
      "level": "Intermediate",
      "comments": 1,
      "email": null,
      "proposer": "Samarth Shah",
      "phone": null,
      "speaker": "Samarth Shah",
      "submitted": "2012-08-25T07:55:22",
      "bio": "I am an Electronics Engineer.I have experience on Open Source Computer Vision (OpenCV). I have also done remarkable work with Kinect in open source environment. I write articles for \"Linux For You\", an open-source magazine.My area of interest includes Open Source Computer Vision , Arduino ,Raspberry Pi , Human Computer Interaction , Python , HTML 5. I spoke at \"Electronics Design Engineer Conference\" on \"Design Gesture Recognition Devices\". I am also speaker at \"Electronics Rocks'12\" conference along with founder of  \"Raspberry Pi\".In my spare time I write motivational thoughts and share the good one at my blog.(Link: https://shahsamarth.wordpress.com) ",
      "objective": "1. Setting up Raspberry Pi for Python Programming\r\n\r\n2. Running several python script with Raspberry Pi\r\n\r\n3. Introduction to Portable Python and Image Processing with Portable Python",
      "type": "Talk",
      "id": 74,
      "description": "For many years people are using python but according to me it is time to see some futuristic trends in python programming. This talk is divided in two parts :\r\n1. Raspberry Pi \r\n2. Portable Python\r\n\r\n1. Raspberry Pi\r\nIn the first part of the talk I will present how to set up Raspberry Pi (It is a credit card sized single-board computer developed in the UK by the Raspberry Pi Foundation) for Python programming.\r\nFirst part is also followed by demonstration of several scripts running on Raspberry Pi. The examples includes basics of Python and Basic Scientific Computing.\r\n\r\n2. Portable Python\r\nSecond part contains \"How to set up portable python\". It also include how to do image processing in python.\r\nIt is also followed by examples like image operation (crop,Enhancement,merge and many more) and several filters.\r\n\r\nThis talk is complete different from traditional talk presented earlier and give more insight how python can be used more effective way."
    },
    {
      "slides": "",
      "votes": 8,
      "name": "73-building-intelligent-websites-with-python",
      "links": "",
      "title": "Building intelligent websites with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/73-building-intelligent-websites-with-python",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Nagarjuna Varma",
      "phone": null,
      "speaker": "Nagarjuna Varma",
      "submitted": "2012-08-24T17:39:10",
      "bio": "I am a CS student currently in my final year. I am a python lover and an Open Source enthusiast presently contributing to the Mozilla Foundation. Learning and sharing knowledge is something I really enjoy. I have used python  for some of my projects at university and also built a simple movie and video recommendation engine thanks to some help from the guys on the python IRC.",
      "objective": "The main objective is to show how websites can be made smarter and much more dynamic by performing some data mining operations and running a few machine learning python scripts. It will also demonstrate how this task can be done without much hassle in python by presenting a simple demo.   \r\n",
      "type": "Talk",
      "id": 73,
      "description": "In a world where websites are growing exponentially, how can you stay ahead of the curve ? The answer is simple enough - Make a smarter website. This talk will give you an insight to the different ways in which the data collected can be modeled and manipulated using python to make your website intelligent. It will cover topics from belief networks to clustering and some techniques of implementing them in python to enhance the user experience.    \r\n\r\nThe intend to split my talk into the following parts:   \r\n  \r\n1. What do you mean by intelligent websites?   \r\n2. Techniques employed - simple and not so simple   \r\n3. Using scikit to embed intelligence   \r\n4. Simple Demo  \r\n5. Exploring what else could be done"
    },
    {
      "slides": "",
      "votes": 9,
      "name": "72-enaml-pythonic-toolkit-independent-declarative-uis",
      "links": "",
      "title": "Enaml: Pythonic, toolkit independent, declarative UIs  ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/72-enaml-pythonic-toolkit-independent-declarative-uis",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 6,
      "email": null,
      "proposer": "Puneeth Chaganti",
      "phone": null,
      "speaker": "Puneeth Chaganti",
      "submitted": "2012-08-24T16:53:40",
      "bio": "Puneeth Chaganti is currently employed at Enthought and writes Python code for his bread and butter.  He's not the author of Enaml, but has worked with it on a few small projects and is excited by and loves it's simplicity for developing GUIs. ",
      "objective": "The talk aims at introducing the audience to Enaml and help them get started with using Enaml and Traits for building GUI applications. ",
      "type": "Talk",
      "id": 72,
      "description": "Enaml is a DSL for writing platform independent, declarative UIs.  In a model-view-controller world, Enaml makes it very easy to develop the view and controller.  Typically, the model is built with Traits, but it's model is framework agnostic and provides hooks for using custom model frameworks.\r\n\r\nThe DSL is a strict superset of Python and provides a simple Pythonic syntax for declaring a UI that binds and reacts to changes in the models. Enaml is dynamically executed and it lets you bind to arbitrary Python expressions.  It uses a constraint based layout system which makes it possible to have layouts that are not typically possible with traditional UI toolkits.  Enaml also supports asynchronous UIs which allow one to have multiple UIs connecting to the same model running in the same process or out of process.  This, in theory, opens up the possibility for a web-based UI to be used to control a model.  \r\n"
    },
    {
      "slides": "",
      "votes": 8,
      "name": "71-new-kids-on-the-scipy-block",
      "links": "",
      "title": "New kids on the SciPy block",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/71-new-kids-on-the-scipy-block",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Puneeth Chaganti",
      "phone": null,
      "speaker": "Puneeth Chaganti",
      "submitted": "2012-08-24T16:39:17",
      "bio": "[Pankaj Pandey](http://github.com/pankajp) and [Puneeth Chaganti](http://github.com/punchagan), who are currently employed at Enthought and write Python for their bread and butter, will be delivering this talk. \r\n\r\n",
      "objective": "This talk aims to give an overview of the new kids on the block in the SciPy universe.  Many of the tools are usable outside of the Science/Engineering fields. ",
      "type": "Talk",
      "id": 71,
      "description": "In this talk we look at some exciting new developments from the \u201cSciPy community\u201d.  Don\u2019t be fooled by the word \u201cSciPy\u201d as many of these tools are usable outside the Science/Engineering community.  In particular we will take a look at the following:\r\n\r\n - IPython: we look at its new notebook and also some of the parallel execution features\r\n - Pandas: more powerful data structures for data analysis\r\n - Matptlolib\u2019s HTML5 backend\r\n - Machine learning with Scikits-learn\r\n\r\nThere are also interesting developments on high performance computing that we\u2019ll take a very quick look at:\r\n\r\n - Rapid development of C-extensions with Cython\r\n - Developments on the PyPy front with LLVM based JITing\r\n - LLVM based tools.\r\n - PyOpenCL and PyCUDA.\r\n"
    },
    {
      "slides": "",
      "votes": 9,
      "name": "70-powerful-building-blocks-for-application-development-in-python",
      "links": "http://code.enthought.com/projects/",
      "title": "Powerful building blocks for application development in Python  ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/70-powerful-building-blocks-for-application-development-in-python",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Prabhu Ramachandran",
      "phone": null,
      "speaker": "Prabhu Ramachandran",
      "submitted": "2012-08-24T16:30:39",
      "bio": "Prabhu Ramachandran has been a faculty member at the Department of Aerospace Engineering, IIT Bombay, since 2005. His research interests are primarily in particle methods and applied scientific computing. He has been active in the FOSS community for more than a decade. He co-founded the Chennai Linux User Group in 1998 and is the creator, and lead developer of Mayavi. He has contributed to the Python wrappers of the Visualization Toolkit. Prabhu has a Ph.D. in Aerospace Engineering from IIT Madras. He is an active member of the SciPy community as well as a member the Society for Industrial and Applied Mathematics and a nominated member of the Python Software Foundation.",
      "objective": "Provide an overview of some powerful application building blocks that Enthought uses for developing solid applications with Python.",
      "type": "Talk",
      "id": 70,
      "description": "Enthought has contributed several powerful open source packages to the Python community.  Some of these packages are bundled together to form \u201cThe Enthought Tool Suite\u201d or ETS.  While ETS is best known in scientific computing circles, these tools are general purpose and can be used for a variety of applications  In this talk we provide an overview of ETS.  We provide an overview of the functionality and benefits of using some of the core ETS packages namely, Traits, TraitsUI, Chaco, Mayavi and Envisage.  We will provide examples of these packages and highlight the benefits of using the ETS.\r\n\r\nEnthought is also working on a new Pythonic, toolkit-independent, declarative DSL to build GUIs called Enaml.  We will take a sneak peek at some of Enaml\u2019s features."
    },
    {
      "slides": "",
      "votes": 10,
      "name": "69-building-interactive-applications-with-ets",
      "links": "http://code.enthought.com/projects",
      "title": "Building interactive applications with ETS  ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/69-building-interactive-applications-with-ets",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Prabhu Ramachandran",
      "phone": null,
      "speaker": "Prabhu Ramachandran",
      "submitted": "2012-08-24T16:28:12",
      "bio": "Prabhu Ramachandran has been a faculty member at the Department of Aerospace Engineering, IIT Bombay, since 2005. His research interests are primarily in particle methods and applied scientific computing. He has been active in the FOSS community for more than a decade. He co-founded the Chennai Linux User Group in 1998 and is the creator, and lead developer of Mayavi. He has contributed to the Python wrappers of the Visualization Toolkit. Prabhu has a Ph.D. in Aerospace Engineering from IIT Madras. He is an active member of the SciPy community as well as a member the Society for Industrial and Applied Mathematics and a nominated member of the Python Software Foundation.",
      "objective": "This talk aims to provide a good starting point for someone starting off with building GUI applications, and help them build more sophisticated applications with a clean architecture. ",
      "type": "Tutorial",
      "id": 69,
      "description": "The Enthought Tool Suite (ETS) is a suite of fundamental building blocks to make rich interactive applications in Python.  ETS is open source and distributed under the terms of the BSD. It is developed and maintained by Enthought.  It forms the basis for all applications that Enthought builds.  ETS consists of the following core packages:\r\nTraits: traits is the cornerstone of ETS and provides explicit type declarations in Python. One can think of them as Python object attributes on steroids. It allows one to create objects with attributes supporting initialization, validation, delegation, notification and visualization using a GUI.\r\n\r\n - TraitsUI: provides a way to declaratively define a user interface for objects that have traits.\r\n - Chaco: a powerful, interactive 2d plotting toolkit.\r\n - Mayavi: a powerful 3D visualization package.\r\n - Envisage: a framework for building extensible applications with plugins.\r\n\r\nIn this tutorial we take a good look at each of these packages and learn to use them to create a simple desktop application that integrates 2D and 3D visualization.  This talk aims to provide a good starting point for someone starting off with building GUI applications, and help them build more sophisticated applications with a clean architecture. "
    },
    {
      "slides": "",
      "votes": 7,
      "name": "68-extract-information-from-the-web-beautifully",
      "links": "",
      "title": "extract information from the web, beautifully",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/68-extract-information-from-the-web-beautifully",
      "section": "_Others",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Anuvrat Parashar",
      "phone": null,
      "speaker": "Anuvrat Parashar",
      "submitted": "2012-08-24T14:11:43",
      "bio": "An Open Source Enthusiast and Evangelist, avid Linux user who has been passionate about everything Python ever since he came to know about it. He is currently employed as a developer by Reviews42.com and spends his weekdays dabbling with their codebase. More about him can be found at  [his website](http://anuvrat.in/ 'anuvrat.in') .",
      "objective": "Everybody knows about the enormity of web and data available on it and also about the giant internet search engine which can get the information to you.\r\n\r\nBut what if you don't want to open the web browser everytime you need that tiny piece of information? While the whole world either gives up or gets to hardwork, pythonistas get the work done smartly.",
      "type": "Talk",
      "id": 68,
      "description": "The talk shall move on these lines:\r\n\r\n-Introduction to BeautifulSoup and Mechanize.\r\n\r\n-Some kiddish pointless experimentation from within the python interpreter's shell.\r\n\r\n-Scripting a smallish app (using PyQt) that does something sensible, eg shows the weather or the cricket score in your system tray. "
    },
    {
      "slides": "https://docs.google.com/presentation/d/1uOIt85a-XvKV_GxK2ELDN9Fx29DED1XNueePqecoyn8/edit",
      "votes": 6,
      "name": "67-shake-the-very-fabric-of-django-deployment-woes",
      "links": "",
      "title": "Shake the very fabric of django deployment woes",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/67-shake-the-very-fabric-of-django-deployment-woes",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Anuvrat Parashar",
      "phone": null,
      "speaker": "Anuvrat Parashar",
      "submitted": "2012-08-24T12:49:16",
      "bio": "An Open Source Enthusiast and Evangelist, avid Linux user who has been passionate about everything Python ever since he came to know about it. He is currently employed as a developer by Reviews42.com and spends his weekdays dabbling with their codebase. More about him can be found at  [his website](http://anuvrat.in/ 'anuvrat.in') .",
      "objective": "There cometh a day in lives of every Django developer when they wonder whether there was a way to reduce the time spent in altering the settings file before every deployment, be it on their staging / production servers. Well there is, and thats what this tutorial intends to address.\r\n###Salient Features: ###\r\n\r\n- Managing multiple settings file.\r\n\r\n- Automating the deployment process with Fabric.\r\n\r\n- Integrating above two with your source code management system\r\n\r\n###### Save time deploying and spend it developing.",
      "type": "Tutorial",
      "id": 67,
      "description": "The session can be broadly broken up into following phases:\r\n\r\n-A short interactive introduction to Django just to get the audience revved up. A demo on what we would do for deployment when we don't have fabric at our disposal.\r\n\r\n-A breif introduction to fabric and demonstration of magical deployment using it.\r\n\r\n-A detailed introduction to the features of Fabric will come next after which we we shall have a discussion and dicover what we could accomplish using fabric."
    },
    {
      "slides": "",
      "votes": 4,
      "name": "66-optimization-and-profiling",
      "links": "",
      "title": "Optimization and Profiling",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/66-optimization-and-profiling",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Gayatri Nittala",
      "phone": null,
      "speaker": "Gayatri Nittala",
      "submitted": "2012-08-24T12:42:59",
      "bio": "Gayatri Nittala, is working with Infotech Enterprises Limited, Hyderabad and has  five years of python programming experience in developing various desktop applications.\r\n\r\nMadhubala Vasireddy, is working with Infotech Enterprises Limited, Hyderabad and has seven years of python programming experience in developing desktop applications and simulation tools.\r\n",
      "objective": "\"First make it work. Then make it right. Then make it fast!\" -  This quotation, often with slight variations, is widely known as \"the golden rule of programming.\" The focus of this talk is on a part of this golden rule - \"Make it fast!\". It shows, how to transform a piece of python code to improve it's efficiency and provide an optimal solution. It would also be an exemplary talk on how to profile, identify the hotspots and develop a fast enough python application.",
      "type": "Talk",
      "id": 66,
      "description": "Certain optimizations amount to good programming style and so should be learned as a language is learnt. Following some simple tips would improve the performance of a system to a great extent.This talk discusses some python specific optimizations.\r\n\r\nMost working programs have bottlenecks or hotspots - the crucial piece of code where the program spends much time in execution. A programmers wild guess on 'where these hotspots are?' might be quite unreliable. Either using the builtin python profile modules or various other profiling tools would help in identifying them right. This talk present some examples on how to use these profilers to identify the hotspots and rewrite the code to get an optimal solution.\r\n\r\nOutline of the talk:\r\n\r\n1. What is optimization?\r\n2. When to optimize?\r\n3. Where to optimize?\r\n\t- profile\r\n\t- identify the hotspots\r\n\t- optimize\r\n4. How to optimize?\r\n\t- Python optimization tips.\r\n"
    },
    {
      "slides": "",
      "votes": 22,
      "name": "65-building-a-speaker-recognition-system",
      "links": "https://sites.google.com/site/achintprakash/",
      "title": "Building a speaker recognition system",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/65-building-a-speaker-recognition-system",
      "section": "Scientific Computing",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Achintya Prakash",
      "phone": null,
      "speaker": "Achintya Prakash",
      "submitted": "2012-08-24T08:11:09",
      "bio": "My name is Achintya Prakash. Currently I just started working as a Software Developer for Microsoft, Hyderabad. Before this, I was interning at Bell Labs, where I did my bachelor thesis on security attacks against speech authentication systems. \r\n\r\nI've spent 4 fun years in BITS, Pilani-Goa, where I studied Computer Science. I've been coding in Python for a couple of years now, and gave a lecture series on Introductory Python to colleges across Goa, as a member of the Google Technical Users Goup.",
      "objective": "Objectives:\r\n\r\n1. Obtain an understanding of speaker recognition and how it works\r\n\r\n2. Set up a basic speaker authentication system\r\n\r\n3. Briefly discuss further improvements that can be made improve accuracy\r\n",
      "type": "Talk",
      "id": 65,
      "description": "Ever wanted to program your door to open at the sound of your voice? Or control everything in your room securely by just talking to it? Or make personalized voice controlled applications to improve accessibility? Whatever your goal, the first steps to any of these would be making your machine smart enough to know who\u2019s talking. \r\n\r\nSpeaker authentication refers to how a machine would be able to recognize a person based on their voice alone. While the field itself is deeply embedded in statistics and mathematics, implementing speaker authentication systems have become much easier and more accessible now by abstraction provided from existing libraries.\r\n\r\nThis talk will first familiarise you with the basics of why speaker authentication works, and what makes it tick. The roadmap for the talk will roughly follow:\r\n\r\n1. We\u2019ll briefly discuss feature extraction from sound, training Gaussian Mixture Models to recognise human speech and individual speakers, step through the workflow of extracting features from voice samples, removing silences from the audio, comparing with trained models and getting a normalized score, setting a decision threshold based on the EER diagrams.\r\n\r\n2. We\u2019ll then hack some open source libraries (SPro and Alize) using python scripts, and get our own basic version of an authentication system working. The accuracy of the recognition, being dependant on a variety of factors including data set and voice quality, may not be the greatest, which will lead to the ending discussion of the talk.\r\n\r\n3. The talk will close with a brief discussion of what can  be done further to improve the accuracy of authentication. Some possible topics include implementing SVM or ivectors, using JFA or NAP for channel compensation, using different types of normalization, using impostor models for score normalization etc.\r\n\r\nThe talk doesn\u2019t aim to be highly mathematical or overtly academic. Rather, the end result would be to have obtained enough of an understanding of basic speech recognition to begin hacking away at it at once.\r\n\r\n\r\n\r\n"
    },
    {
      "slides": "",
      "votes": 15,
      "name": "64-competition-programming-and-problem-solving-using-python",
      "links": "",
      "title": "Competition Programming and Problem Solving using Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/64-competition-programming-and-problem-solving-using-python",
      "section": "_Others",
      "level": "Beginner",
      "comments": 1,
      "email": null,
      "proposer": "Dhruv Baldawa",
      "phone": null,
      "speaker": "Dhruv Baldawa",
      "submitted": "2012-08-24T08:02:04",
      "bio": "The speaker is a Bachelor of Engineering in Computer Science. He has been a part of Google Summer of Code 2011 and 2012. He has been a gold medallist in Indian National Cyber Olympiad. He now works as Software Developer at [Enthought, Inc](http://www.enthought.com).",
      "objective": "This talk will be a beginners introduction to using Python as a language while participating in online competitions like Project Euler, Facebook Hacker Cup, Google Code Jam, CodeChef, etc.",
      "type": "Talk",
      "id": 64,
      "description": "It aims to provide a brief introduction to;\r\n * Techniques (and their corresponding tradeoffs) one can use to make code both space and time efficient.\r\n * How one can leverage the power of Python by using generator expressions, decorators, itertools, etc. \r\n * Some problem solving techniques that apply to a large subset of online programming puzzles and contests."
    },
    {
      "slides": "",
      "votes": 9,
      "name": "63-customizing-the-django-admin",
      "links": "",
      "title": "Customizing the Django admin",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/63-customizing-the-django-admin",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Dheeraj Sayala",
      "phone": null,
      "speaker": "Dheeraj Sayala",
      "submitted": "2012-08-24T07:04:20",
      "bio": "I am a Python and JavaScript developer glued to web development. I have been developing web and mobile-web applications for 2 years. Over the last year, I have worked on a CMS for our artistic clients whose attention to detail and perfection don't leave much room for less-than-acceptable interfaces for their daily use. Making their daily editing and uploading experience as pleasant as possible has made me understand Admin and learn the intricacies of UX and usability of forms.\r\n\r\nWebsite: [dheerajs.com](http://dheerajs.com)\r\n\r\nCurrently working at: [Agiliq](http://agiliq.com)\r\n\r\nI can't live without Vim and Linux for development. Music, cricket, food are my other passions.",
      "objective": "To help Django developers improve the admin interface and use some of its advanced features and related libraries",
      "type": "Talk",
      "id": 63,
      "description": "Admin is one of Django's killer features. Though its look and feel are acceptable to developers, it is rarely something your clients will be impressed with, specially if they have to enter data through it day in and day out. They may point to WordPress and say that they must have this or that feature. Luckily, not only is it very configurable with little effort, but also built upon highly extensible views and templates. Also, there are some mature libraries which will make our Admin more palatable to users.\r\n\r\nThe talk will start with a short discussion on the possible motives behind improving the admin. Then we will discuss:\r\n\r\n- which parts of it are not good enough\r\n- some of the ways to make it more awesome.\r\n- custom views and forms\r\n- extending templates with custom CSS and JavaScript (ex: adding tinymce or [chosen](http://harvesthq.github.com/chosen/))\r\n- existing libraries ([django-grappelli](https://github.com/sehmaschine/django-grappelli) etc.) that improve UX, usability, look and feel\r\n\r\nIf there is enough time, we can see integrating advanced tools like search (using haystack/solr)"
    },
    {
      "slides": "http://konarkmodi.com/pycon2012/pycon.pdf",
      "votes": 9,
      "name": "62-celery-for-background-task-processing-and-deferred-execution",
      "links": "",
      "title": "Celery for background task processing and deferred execution.",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/62-celery-for-background-task-processing-and-deferred-execution",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "konark modi",
      "phone": null,
      "speaker": "konark modi",
      "submitted": "2012-08-23T17:29:07",
      "bio": "Piyush Kumar is  Manager for Website Operations @ MakeMyTrip.com. He is an open source enthusiast who loves doing DevOps and Information security.\r\nHis major work focus areas include : BigData, Monitoring, Handling Apache and Tomcat servers, MySQL, Django,  F5 BigIP LTM/GTM, Profiling JavaApp using JProfiler/YourKit, Virtualization on Linux using XEN/VMware.\r\n\r\nKonark Modi works as Sr. System Engineer for Website Operations @ MakeMyTrip.com.\r\nMajor work focus areas include Designing/Writing/Implementing/Maintaining tools for monitoring/alerting purposes. Python/Django are the primary languages that is used in daily operations.\r\nApart from this loves to interact with new technologies and keep updated with the latest happenings in the tech. space.\r\n",
      "objective": "Understand  how we can use Celery in a web-app for background/asynchronous task which needs to processed immediately or after a scheduled interval. ",
      "type": "Tutorial",
      "id": 62,
      "description": "Celery is an open source asynchronous task queue/job queue based on distributed message passing. It is focused on real-time operation, but supports scheduling as well.\r\n\r\nI this tutorial we will show the use of Celery and Django to build a simple scheduling web app that needs to process tasks immediately or after a scheduled interval.\r\n\r\nThe tutorial will be broadly based upon the following topics:\r\n1.\tCelery architecture\r\n2.\tMessage broker (AMQP based messaging queue eg. RabbitMQ)\r\n3.\tConnecting celery with RabbitMQ\r\n4.\tRunning Celery workers\r\n5.\tCreating basic tasks and scheduling them.\r\n6.\tRunning Celery workers\r\n7.\tDjango Celery admin panel\r\n8.\tStoring task results in a backend. (MySQL)\r\n9.\tMonitoring the scheduling app for minimal downtime.\r\n"
    },
    {
      "slides": "",
      "votes": 4,
      "name": "61-rapid-development-of-website-search-in-python",
      "links": "",
      "title": "Rapid development of website search in Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/61-rapid-development-of-website-search-in-python",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Vishal Kanaujia",
      "phone": null,
      "speaker": "Vishal Kanaujia",
      "submitted": "2012-08-23T13:12:23",
      "bio": "Vishal and Chetan are Python developers and have interest in the field of Python internals, Filesystems, and web development. \r\n\r\nOpen source projects\r\n\r\n- seFS (https://github.com/cjgiridhar/seFS)\r\n- pyrebootops (https://github.com/cjgiridhar/pyrebootops/)\r\n\r\nTalks\r\n\r\n- FUSEing Python for rapid development of storage efficient file system, PyCon APAC, June 2012, Singapore\r\n\r\n- Exploiting the power of multicore for scientific computing in Python, SciPy India, December 2011, IIT Bombay\r\n\r\n- Diving in to Byte-code optimization in Python, SciPy India, December 2011, IIT Bombay\r\n\r\n- \u2018Python threads: Dive into GIL!\u2019, PyCon India, Sept 2011\r\n\r\nWebsites\r\n\r\n- http://technobeans.com/\r\n- http://freethreads.net/",
      "objective": "Python is rapidly gaining acceptance for web development with real-time web frameworks, database interfaces and web templates. Search is an integral functionality of a website that enriches user experience and thus a high performance, scalable and robust search solution has been a perennial need of developers.\r\n\r\nThis talk discusses the available search solutions for websites/web APIs, and our learning with a prototype implementation.",
      "type": "Talk",
      "id": 61,
      "description": "Agenda\r\n\r\n- Python in web development\r\n- Website search requirements\r\n- Design considerations: Getting search work\r\n- Exploring solutions\r\n\t- Lucene\r\n\t- Whoosh\r\n\t- Xapian\r\n- Code: Prototype implementation\r\n- Learning\r\n- Choosing what is suitable"
    },
    {
      "slides": "",
      "votes": 7,
      "name": "60-introduction-to-mysql-connector-python",
      "links": "",
      "title": "Introduction to MySQL Connector/Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/60-introduction-to-mysql-connector-python",
      "section": "_Others",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Uma Bhat",
      "phone": null,
      "speaker": "Uma Bhat",
      "submitted": "2012-08-23T12:55:44",
      "bio": "Uma - Ronen\r\n\r\nUma Bhat is a Senior Support Engineer for MySQL at Oracle India, with more than 6 years experience in MySQL as a DBA. She deals with real time customer issues and resolution. Uma is passionate about Free and Open Source Software's and writing technical articles. She is also MySQL DBA Certified (CMDBA).\r\n\r\nRonen Baram hails from Oracle Australia, a Principal Sales Consultant for MySQL. He is enthusiast in Open Source Technologies, specially MySQL. His areas of expertise include MySQL Cluster and Replication.",
      "objective": "Introducing the MySQL Connector/Python (which is written in pure Python and does not have any dependencies except Python Standard Library), it's supported features, Installation and some basic coding level examples.",
      "type": "Talk",
      "id": 60,
      "description": "Introducing MySQL Connector/Python that provides database driver support for connecting to MySQL from a Python program using an API that is compliant with the Python DB API version 2.0. \r\n\r\nIt is written in pure Python and does not have any dependencies except for the Python Standard Library. \r\n\r\nWe also describe about the supported features of MySQL Connector/Python's.\r\n\r\nInstallation and setting up MySQL Connector/Python.\r\n\r\nBasic coding level examples using MySQL Connector/Python."
    },
    {
      "slides": "",
      "votes": 11,
      "name": "59-useless-python",
      "links": "",
      "title": "Useless Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/59-useless-python",
      "section": "_Others",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "t3rmin4t0r",
      "phone": null,
      "speaker": "t3rmin4t0r",
      "submitted": "2012-08-23T07:14:57",
      "bio": "I've been programming in python for the last 10 years. I don't claim to do anything world changing with it, short of my blog which runs python in the back.",
      "objective": "Exploring the fringes of Python's engine (CPython/PyPy) & language's quirks.",
      "type": "Talk",
      "id": 59,
      "description": "Not everything we do is really about work. Sometimes, what we do is really about having fun. \r\n\r\nWhat I do with python is to make it do silly things that never need to be done.  Some of it might be useful, but most of it is completely useless, but merely serves as gateways to understanding python from the inside-out.\r\n\r\nThis is an unnecessary exercise in complexity."
    },
    {
      "slides": "",
      "votes": 6,
      "name": "58-rpy2-using-r-from-python",
      "links": "",
      "title": "RPy2 : Using R from Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/58-rpy2-using-r-from-python",
      "section": "Scientific Computing",
      "level": "Beginner",
      "comments": 1,
      "email": null,
      "proposer": "Harsh Singhal",
      "phone": null,
      "speaker": "Harsh Singhal",
      "submitted": "2012-08-22T18:14:19",
      "bio": "Harsh Singhal has used R both in academia and professionally for over 5 years.\r\n\r\nHe has used Python to engineer Predictive Modeling solutions by leveraging the Statistical tools available in R and using RPy2 to make them available in Python.\r\nHe is currently a Data Scientist at LinkedIn, Bangalore.",
      "objective": "Introduce R as a Statistical Programming language and describe its use via Python by utilizing RPy2 ; A Python package which provides an interface to R ",
      "type": "Talk",
      "id": 58,
      "description": "- Brief introduction to R as a Statistical Modeling environment\r\n- Using R from Python via RPy2\r\n- Interacting with R data structures in Python\r\n- Executing a few common Statistical functions via RPy2\r\n"
    },
    {
      "slides": "",
      "votes": 9,
      "name": "57-pycassa-python-cassandrified",
      "links": "",
      "title": "PyCassa - Python Cassandrified",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/57-pycassa-python-cassandrified",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Ramesh Rajini",
      "phone": null,
      "speaker": "Ramesh Rajini",
      "submitted": "2012-08-22T11:06:15",
      "bio": "Ramesh Rajini, currently working for Open Systems Team in Education & Research, Infosys Bangalore has 6 years experience on scripting languages like PERL, Python, PHP, TCL, sed &awk. \r\n\r\nWork Area focus on Tools development, Training & Consultancy division. An Open Source community enthusiast ,  published & presented papers in many IEEE sponsored International & National level conferences like T4E, IEC, AICERA to name a few.\r\n\r\nLooking forward to meet Python enthusiasts @PyCon 2012, India. ",
      "objective": "To introduce the Python enthusiasts to Apache Cassandra, a NO-SQL data base; it\u2019s need in today\u2019s world to manage humongous data.\r\n \r\nFocus on using a programmer friendly Python Client library for Apache Cassandra \u2013 Pycassa with examples. \r\n",
      "type": "Talk",
      "id": 57,
      "description": "Ever wondered how or where are the likes & tweets from Facebook, Twitter getting stored? Is our good old RDBMS supporting this storage? Pondering on these questions, this session aims at introducing the need for a NO-SQL database- Cassandra, its features & limitations.\r\n\r\nHow to use Pycassa, a powerful python client library to interact with Cassandra making the programmer\u2019s life easier! It includes how to get data from column family, insert keys -values etc with examples\r\n"
    },
    {
      "slides": "",
      "votes": 30,
      "name": "56-gevent-and-coroutines-scaling-real-world-network-applications",
      "links": "",
      "title": "Gevent and Coroutines - Scaling Real World Network Applications",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/56-gevent-and-coroutines-scaling-real-world-network-applications",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Aalok Sood",
      "phone": null,
      "speaker": "Aalok Sood",
      "submitted": "2012-08-21T14:40:11",
      "bio": "Born in the peaceful valley of Manali, I am a true nature's child. My life revolves around logic, motorcycles, sports and counter strike. \r\n\r\n\r\nI am a Senior Member of Technical Staff at Idea Device (http://www.ideadevice.com) Bangalore. To this date, I hold the record for the maximum bugs introduced in our software.",
      "objective": "Illustrate how gevent and coroutines make writing highly concurrent real-world python applications a breeze.\r\n\r\nThe aim of the session is to make network/server application authors appreciate the scalability of gevent and coroutines as an alternative to multithreaded and multiprocess models.",
      "type": "Talk",
      "id": 56,
      "description": "Many real world applications are I/O bound. Network can quickly become the bottleneck. The traditional approach to developing concurrent networking servers is to write a multiprocess or a multithreaded server. \r\n\r\n\r\nThe multiprocess model (especially in python) is quickly limited by available memory (& sometimes cpu) as multiple copies of a fat interpreter are running. The multithreaded model in Python suffers from the GIL. Also, the continuous context switching in threaded processes is a huge overhead. Deadlocks & race-conditions come with the territory.  As we all know, threads are not the solution, threads are the problem.\r\n\r\n\r\nIn this talk I will introduce coroutines (greenlets) along with the powerful gevent library (greenlets for network processes). In my experience gevent based servers scale the best. I'll talk about a real world application used by very large enterprises and its evolution from being a multiprocess to multithreaded to a gevent core. I will describe the limitations we hit with the first two models and detail the subsequent *rewrite* of the server using gevent. I will also describe the ease with which the code was ported to the gevent model."
    },
    {
      "slides": "",
      "votes": 19,
      "name": "55-simple-linux-cluster-with-python-and-beanstalkd",
      "links": "",
      "title": "Simple Linux Cluster With Python and Beanstalkd",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/55-simple-linux-cluster-with-python-and-beanstalkd",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Rachee Singh",
      "phone": null,
      "speaker": "Rachee Singh",
      "submitted": "2012-08-20T18:23:00",
      "bio": "Rachee Singh uses Python for everything ranging from configuring DNS servers to testing networking protocols. More details about her work: [blog](http://racheesingh.github.com) and [Github](http://github.com/racheesingh)\r\n\r\nEmaad Manzoor hacks on distributed computing, language processing and computer vision, hoping to engineer the [Oracle](http://en.wikipedia.org/wiki/Oracle_(The_Matrix)) someday. He currently builds prescient systems for the trend detection platform at Yahoo!.\r\n\r\n* [LinkedIn](http://www.linkedin.com/in/emaadmanzoor)\r\n\r\n* [Github](http://github.com/emaadmanzoor)",
      "objective": "To construct a simple Linux cluster which is reasonably fault tolerant for executing parallel algorithms across multiple nodes.\r\n\r\n* Introduction to distributed message queues\r\n* Setting up Beanstalkd\r\n* Setting up the cluster with the help of Beanstalkd\r\n* Testing the cluster [with 2 or more nodes].\r\n* Demonstration of computation of Pi across nodes and the associated speedup\r\n* Making the cluster fault tolerant\r\n* Running parallel matrix multiplication on the cluster",
      "type": "Tutorial",
      "id": 55,
      "description": "This talk discusses the details of setting up one\u2019s own Beowulf cluster using Python. It presents an alternative to the traditional MPI APIs based approach to setting up a cluster. It is amazing how simple and elegant this alternative is! This simple cluster will then be used as a breadboard for parallel computing algorithms.\r\n\r\nSetting up a cluster is a cumbersome task if one intends to use MPI/OpenMPI and their many variants . The issues range from setting up ssh between nodes to the unfriendly nature of C/C++. This is where Python\u2019s ease-of-use can be leveraged.\r\n"
    },
    {
      "slides": "",
      "votes": 21,
      "name": "54-language-modeling-with-python",
      "links": "",
      "title": "Language Modeling With Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/54-language-modeling-with-python",
      "section": "Scientific Computing",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Emaad Ahmed Manzoor",
      "phone": null,
      "speaker": "Emaad Ahmed Manzoor",
      "submitted": "2012-08-20T13:10:36",
      "bio": "Emaad Manzoor hacks on distributed computing, language processing and computer vision, hoping to engineer the [Oracle](http://en.wikipedia.org/wiki/Oracle_(The_Matrix)) someday. He currently builds prescient systems for the trend detection platform at Yahoo!.\r\n\r\n   * [LinkedIn](http://www.linkedin.com/in/emaadmanzoor)\r\n   * [Github](http://github.com/emaadmanzoor)",
      "objective": "   * Understand the theoretical fundamentals behind language models.\r\n   * Learn how to build a simple content-generator from scratch.\r\n   * Understand the common pitfalls affecting language models.\r\n   * Learn how to improve our simple content-generator.\r\n   * Learn how to modify our content-generator to detect the source of plagiarized content.\r\n   * Learn how to make life easy by using NLTK.\r\n   * Learn how to use random forests to improve on traditional n-gram approaches.\r\n   * Discover the various problems for which language model-based approaches has been used as solutions.",
      "type": "Talk",
      "id": 54,
      "description": "This talk is an introduction to language models, where we will converse primarily in math and Python. We will cover the theory behind the approach, a number of demonstrations and how-it-works examples, practical issues when applying language models in the real world and how we solve them in code. We'll also cover using NLTK to simplify common language model tasks, and if time permits, explore random forests and how they're used with language models. We'll end with a brief survey of language models in the wild."
    },
    {
      "slides": "http://www.slideshare.net/atmb4u/pycon-2012-scikitlearn",
      "votes": 21,
      "name": "53-learning-from-the-past-with-scikit-learn",
      "links": "",
      "title": "Learning from the Past: with Scikit-Learn",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/53-learning-from-the-past-with-scikit-learn",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Anoop Thomas",
      "phone": null,
      "speaker": "Anoop Thomas",
      "submitted": "2012-08-18T06:24:16",
      "bio": "Anoop Thomas Mathew is a Python enthusiast with more than two years of experience in the industry. With the title of Director of R&D, [Profoundis ][1]Pvt. Ltd., he created and manages the team behind [Momentous ][2]Business Suite, a complete solution for SME Data Analytics.\r\n\r\n[1]: http://www.profoundis.com\r\n[2]: http://www.profoundis.com/?link=services&data=mo",
      "objective": "The talk aims in enabling python programmers to leverage the capabilities of [scikit-learn][1], a powerful machine learning library in python, to classify and forecast, using their existing historical data, without much of a complex hassle.\r\n\r\n[1]: http://scikit-learn.org/stable/",
      "type": "Talk",
      "id": 53,
      "description": "[Scikit-Learn][1] is a popular library for machine learning in python, which can be leveraged in identifying patterns in data we deal everyday, and take necessary initiatives to optimize our solutions. Talk will walk through k-means clustering and a few other features provided by scikit-learn, and will try to solve a real world problem with the help of scikit-learn\r\n\r\n[1]: http://scikit-learn.org/stable/"
    },
    {
      "slides": "",
      "votes": 6,
      "name": "52-juju-simple-python-based-devops-tool-does-much-more-than-orchestration",
      "links": "",
      "title": "Juju: Simple python based DevOps tool does much more than Orchestration. ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/52-juju-simple-python-based-devops-tool-does-much-more-than-orchestration",
      "section": "Infrastructure",
      "level": "Beginner",
      "comments": 1,
      "email": null,
      "proposer": "Atul Jha",
      "phone": null,
      "speaker": "Atul Jha",
      "submitted": "2012-08-17T13:20:52",
      "bio": "Currently working as Technology Evangelist- CSS R&D Labs at CSS Corp, Chennai with focus area around cloud computing and Openstack to be specific.\r\n\r\nI am a juju Charm Contributor.  ",
      "objective": "I would like to address following questions :- \r\n\r\n1.  How is juju different from existing similar technology?\r\n2.  Is juju easier and more flexible to deploy?\r\n3. How much time it takes to deploy a LAMP stack on cloud (AWS, Rackspace, Hpcloud)",
      "type": "Tutorial",
      "id": 52,
      "description": "Juju aims to be a service deployment and orchestration tool which enables the same kind of collaboration and ease of use which today is seen around package management to happen on a higher level, around services. With juju, different authors are able to create services independently, and make those services communicate through a simple configuration protocol. Then, users can take the product of both authors and very comfortably deploy those services in an environment, in way resembling how people are able to install a network of packages with a single command via APT.\r\n\r\nAbout my talk:-\r\n\r\nMy tutorial will address`s below mentioned aspects of Juju.\r\n\r\nWhat is juju \r\nCompontents of Juju\r\nCharms\r\nDigging deep inside charms\r\nTesting it.\r\n\r\nRequirement (A free  account on HPcloud, so that you can spawn your instances and play with juju)"
    },
    {
      "slides": "",
      "votes": 12,
      "name": "51-web-development-code-to-deployment",
      "links": "",
      "title": "Web development - Code to Deployment",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/51-web-development-code-to-deployment",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "A S L Devi",
      "phone": null,
      "speaker": "A S L Devi",
      "submitted": "2012-08-17T06:40:06",
      "bio": "Devi is a software consultant and has been programming in Python for the last 5 years.  She has experience in building high traffic websites using Python and managing server infrastructure.",
      "objective": "This hands-on tutorial aims at giving an overview of the complete cycle of web development using Python and a bit of Javascript.\r\nWe'll use Flask micro-framework, jQuery for javascript and Heroku for deployment. ",
      "type": "Tutorial",
      "id": 51,
      "description": "We'll develop a web app to share quotes and vote them up/down.\r\n\r\n- Design nice URLs \r\n- Design database models with SQLAlchemy\r\n- Develop the backend code and templates\r\n- Integrate javascript\r\n- Deploy it on Heroku\r\n\r\n### Requirements\r\n\r\nThe participants are expected to know basic Python and have python  2.7 installed along with packages of flask, flask-sqlalchemy, wtforms (preferably in virtual environments) on their laptops and [install the heroku toolbelt](https://devcenter.heroku.com/articles/quickstart#step-2-install-the-heroku-toolbelt).\r\n"
    },
    {
      "slides": "",
      "votes": 5,
      "name": "50-mysql-utilities-time-saving-scripts-for-dba",
      "links": "",
      "title": "MySQL Utilities - Time saving scripts for DBA",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/50-mysql-utilities-time-saving-scripts-for-dba",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Megha Singhvi",
      "phone": null,
      "speaker": "Megha Singhvi",
      "submitted": "2012-08-17T06:05:00",
      "bio": "Megha Singhvi is a veteran in computer technology. She has been a speaker at multiple events like Open Source India & with various companies talking mostly about \r\nDatabase technologies. \r\nShe currently manages the MySQL Technical Consultancy team for India and is also Oracle & MySQL DB certified.\r\n",
      "objective": "To give an idea about MySQL & MySQL Utilities which are helpful for managing MySQL databases.",
      "type": "Talk",
      "id": 50,
      "description": "MySQL Utilities are a collection of Python Utilities for managing MySQL databases. They are a part of MySQL Workbench which is available under GPLv2 License."
    },
    {
      "slides": "",
      "votes": 24,
      "name": "49-python-for-android",
      "links": "",
      "title": "Python for Android",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/49-python-for-android",
      "section": "Mobile",
      "level": "Beginner",
      "comments": 1,
      "email": null,
      "proposer": "Arjun jain",
      "phone": null,
      "speaker": "Arjun jain",
      "submitted": "2012-08-17T05:21:33",
      "bio": "I am Arjun Jain, a 22 year old guy bitten by the Linux bug, passionate about Free and Open Source Software and GNU/Linux. I'm a developer, contributor and a student. I enjoy dreaming, writing, coding, traveling and philosophy. \r\nFor more about Arjun, visit  http://www.arjunjain.info.",
      "objective": "A common misconception about developing for the Google Android platform is that you have to write your code in the Java language. The truth is, you actually have a multitude of options through the Scripting Layer for Android (SL4A) project. This talk will help you to understand about building the applications for the Google Android platform primarily using the Python language and a little bit of JavaScript. ",
      "type": "Talk",
      "id": 49,
      "description": "The session will cover :\r\n\r\n* Basic introduction of Google Android platform - 5  min\r\n* Android Application Anatomy  - 5 min\r\n* Scripting Layer for Android (SL4A) Architecture - 10 min\r\n* Building Android application using Python (Demo) - 15 min\r\n* How to contribute -5 min\r\n"
    },
    {
      "slides": "",
      "votes": 19,
      "name": "48-openstack-open-source-software-for-building-private-and-public-clouds-written-in-python",
      "links": "",
      "title": "Openstack: Open source software for building private and public clouds written in Python.",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/48-openstack-open-source-software-for-building-private-and-public-clouds-written-in-python",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 5,
      "email": null,
      "proposer": "Atul Jha",
      "phone": null,
      "speaker": "Atul Jha",
      "submitted": "2012-08-16T20:39:04",
      "bio": "Currently working as Technology Evangelist- CSS R&D Labs at CSS Corp, Chennai with focus area around cloud computing and Openstack to be specific.\r\n \r\nAlso contributing to Openstack project as core doc-team member.",
      "objective": "Learn about Openstack and its components. In the end of the session attendee should be able to understand about the Openstack project and start making contribution to the project.",
      "type": "Talk",
      "id": 48,
      "description": "Openstack is Open source software for building private and public clouds. Within 2 years it has over 3000 contributors and 180 plus enterprise participation like Canonical, RedHat, Rackspace, Intel, HP, DELL, others . Its written in Python which makes it easy for newbies get associated with the project.\r\n\r\nSession outline :\r\n\r\n1. Introduction to Openstack 5 mins\r\n\r\n2. Components (compute/objectstore/image service/dashboard) 15 \r\nmins\r\n\r\n3. Use case 10 mins\r\n\r\n4. Demo (depends on the Internet) 10 mins\r\n\r\n5. How to contribute. 5 mins"
    },
    {
      "slides": "",
      "votes": 45,
      "name": "47-python-bindings-how-to-quick-start-on-big-projects-using-python",
      "links": "",
      "title": "Python Bindings - How to quick-start on big projects using Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/47-python-bindings-how-to-quick-start-on-big-projects-using-python",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 3,
      "email": null,
      "proposer": "Anmol Rajpurohit",
      "phone": null,
      "speaker": "Anmol Rajpurohit",
      "submitted": "2012-08-16T06:55:44",
      "bio": "I am an avid python developer and academic researcher. I enjoy applying my intellectual curiosity and coding skills towards making swift progress on research projects. Being a hard core open-source guy, I love sharing my knowledge and experience, as much as learning from others. \r\n\r\nFor further information, refer: <http://www.linkedin.com/in/arajpurohit>\r\n",
      "objective": "Helping Python developers (both beginners and experienced) solve the most common problems involved with almost every big real-life project using Python:\r\n- Lack of proper documentation\r\n- No coding standards in the existing code : hard to understand\r\n- Different coding styles involved in the existing code\r\n- Less time to deliver new code (after losing considerable time in just understanding the existing code)\r\n",
      "type": "Talk",
      "id": 47,
      "description": "Be it as a student or even as a professional, whenever you start working on any big project, a considerable amount of time is lost in the beginning to understand the existing code. Thus, you are left with less time to write and test your new code.\r\n\r\nWith Python bindings and some smart coding, you can now escape/mitigate these problems and focus on your part on the project.\r\n\r\nContent Summary:\r\n- Common problems for a newbie on big software development projects\r\n- Python Bindings - why do these projects need Python?\r\n- How to start writing your code on DAY ONE of the project\r\n- Real-life demo and quick tips\r\n- Q&A\r\n\r\nNote: This talk derives from my experience on Python coding with senior researchers from Palo Alto Research Center (PARC) and University of California, Los Angeles (UCLA). The demo at the end of session has been taken from my summer work on Named Data Networking, an integral component of CCNx - one of the most promising future Internet architecture being developed by PARC.\r\n"
    },
    {
      "slides": "",
      "votes": 11,
      "name": "46-automated-data-analysis-with-python",
      "links": "",
      "title": "Automated data analysis with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/46-automated-data-analysis-with-python",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 3,
      "email": null,
      "proposer": "Anand S",
      "phone": null,
      "speaker": "Anand S",
      "submitted": "2012-08-16T06:14:13",
      "bio": "Anand is a data scientist at Gramener, a data visualisation company. For more about Anand, visit http://s-anand.net/",
      "objective": "Given a dataset, is it possible to automatically discover insights?\r\n\r\nCan a machine analyse data and identify the most interesting patterns?\r\n\r\nThis talk walks through the basics of automated analysis techniques in Python that you can apply to most datasets.",
      "type": "Talk",
      "id": 46,
      "description": "The talk will cover:\r\n\r\n1. How to identify the numeric and non-numeric fields in a dataset\r\n2. The kinds of analyses that can be performed -- e.g. correlation, comparing means, etc\r\n3. How to identify the \"interestingness\" of each result, and show only the most interesting ones.\r\n\r\nThe analysis will entirely by in Python. NumPy and SciPy, in particular. Some samples of functions that'll end up being used are: scipy.stats.pearsonr, scipy.stats.kruskal, scipy.stats.ttest_ind, etc"
    },
    {
      "slides": "",
      "votes": 16,
      "name": "45-restful-apis-with-python-introduction-demo",
      "links": "",
      "title": "RESTful APIs with Python - Introduction & Demo",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/45-restful-apis-with-python-introduction-demo",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Pratik Mandrekar",
      "phone": null,
      "speaker": "Pratik Mandrekar",
      "submitted": "2012-08-15T20:28:09",
      "bio": "I'm a software developer who worked at Oracle and am now working for a health technology start-up in Bangalore. I have been using python and related web frameworks to build stuff and integrating it with mobile apps.",
      "objective": "A lot of web applications need to expose some parts of their functionality to other clients like their own mobile apps or third party developers for integration. This tutorial will help you understand   \r\n\r\n\r\n1) REST concepts  \r\n\r\n2) Exposing simple functionality for rapid prototyping  \r\n\r\n3) Integration with Django via TastyPie\r\n",
      "type": "Tutorial",
      "id": 45,
      "description": "###The session will cover  \r\n\r\n\r\n* The problem being solved\r\n* What is REST\r\n* A demo to turn a working bit of functionality you have written in Python into a RESTful web service that can be called via a SMS text\r\n* How major APIs handle authentications RESTfully\r\n* How you can comfortably create APIs for an application built for the web (Demo using Django with TastyPie) "
    },
    {
      "slides": "",
      "votes": 8,
      "name": "44-automation-of-web-application-testing-using-selenium-with-python",
      "links": "",
      "title": "Automation of Web Application Testing Using Selenium with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/44-automation-of-web-application-testing-using-selenium-with-python",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Nithya Duraisamy",
      "phone": null,
      "speaker": "Nithya Duraisamy",
      "submitted": "2012-08-15T11:26:18",
      "bio": "Nithya is having 4+ years of experiene in software testing. \r\nshe is using selenium with python for her testing requirements.",
      "objective": "Exploring selenium and python for web application testing automation",
      "type": "Talk",
      "id": 44,
      "description": "Exploring non conventional automation testing tools for web application testing. Researching on available free open source software for web testing. Proposing the best testing software. Finding the practical problems on implementing them and their solutions. Selenium will be used as a web application testing framework. Python will be used as a scripting language to automate selenium test cases."
    },
    {
      "slides": "",
      "votes": 2,
      "name": "43-the-plone-cms-current-future",
      "links": "",
      "title": "The Plone CMS - Current & Future ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/43-the-plone-cms-current-future",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "sureshvv",
      "phone": null,
      "speaker": "sureshvv",
      "submitted": "2012-08-15T07:05:20",
      "bio": "Suresh is Chief Programmer at Grafware specializing in the development, customization and migration of large web sites based on open source content management systems.",
      "objective": "1. Helps people evaluating content management systems (CMS) to understand the advantages of using Plone over competing CMSs.\r\n\r\n2. Helps people familiar with Plone to understand the new features in the latest version and future expected functionality",
      "type": "Talk",
      "id": 43,
      "description": "1. Describes the new functionality offered in Plone versions 4.0 to 4.2\r\n\r\n2. Describes technical directions that are being pursued which will be incorporated in Plone 5"
    },
    {
      "slides": "",
      "votes": 13,
      "name": "42-python-in-big-data-world",
      "links": "",
      "title": "python in big data world",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/42-python-in-big-data-world",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Venkat SP",
      "phone": null,
      "speaker": "Venkat SP",
      "submitted": "2012-08-15T06:39:48",
      "bio": "I am currently working as Technical Architect in Nuvent Technologies, Chnnai. My area of interest are Big Data, Nosql, Cloud and Machine learning.",
      "objective": "This session provides a brief over view on Big Data and Hadoop ecosystem. More importantly how to use python in Hadoop ecosystem with various use cases. ",
      "type": "Talk",
      "id": 42,
      "description": "The session provides insights in to Big data and mainly hadoop ecosystem. How hadoop ecosystem is playing a major role in solving the big data problem. \r\n\r\nWe also look into the Hadoop ecosystem and its related projects to understand how they fit in to the whole ecosystem.\r\n\r\nFinally we look into what is Map Reduce program and how to build map reduce programs using python in order to run on a hadoop cluster. \r\n"
    },
    {
      "slides": "http://goo.gl/LVqWd",
      "votes": 19,
      "name": "41-introduction-to-pygobject-gtk-gstreamer-other-gnome-api",
      "links": "",
      "title": " Introduction to PyGObject - Gtk, GStreamer & other Gnome API",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/41-introduction-to-pygobject-gtk-gstreamer-other-gnome-api",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 1,
      "email": null,
      "proposer": "Dhananjay Sathe",
      "phone": null,
      "speaker": "Dhananjay Sathe",
      "submitted": "2012-08-14T11:57:31",
      "bio": "I am currently a final year Electronics student at BITS Pilani Goa. \r\nI have been programming in python for around 5 years and love hacking my Linux rig ever since i first set it up 9 years back and actively contribute to local LUG and GDG.\r\nI also contribute code to a few open source projects like Gnome, Zeitgeist ,Tweepy (New Py3 port), iPython and primarily Samba and am the creator and author of the gnome-3-wp utility for Gnome 3.\r\nI am currently amidst second GSoC with the Samba Project and am involved with Samba-Gtk tool.\r\n\r\nWhen free I love, hanging out on the beautiful beaches of Goa , driving through the highways, expirementing  and exploring new flavours of Booze and brews.I also happen to be an avid trekker and adventure sports enthusiast.",
      "objective": "Introduce one to the new PyGObject which exposes the wealth of the powerful new GObject Introspection of some of the most extensively used python bindings like Gtk , GStreamer, GLib among others.",
      "type": "Talk",
      "id": 41,
      "description": "PyGtk , PyGst and a lot of other core gnome bindings have long been used for rapid development of a variety of GUI and utilities . \r\n\r\nWith the advent of the Gnome 3 desktop a lot has changed and is here to stay. It's about time you made the switch to this new fast and elegant API for the most popular desktop environment in Linux.  Most scattered static API like Gtk , GStreamer , LibNotify , GLib and many others have now been unified into the dynamic GObject Introspection interface.\r\n\r\nThe main hurdles happen to be the lack of code samples and resources dealing with the same. This talk aims to initiate you to the new methods, practices and changes in the code, cleaning up the load of deprecated cruft, keep apace with the latest changes and get your code up and running."
    },
    {
      "slides": "",
      "votes": 18,
      "name": "40-build-your-own-ivr",
      "links": "",
      "title": "Build Your Own IVR",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/40-build-your-own-ivr",
      "section": "Infrastructure",
      "level": "Beginner",
      "comments": 7,
      "email": null,
      "proposer": "Piyush Aggarwal",
      "phone": null,
      "speaker": "Piyush Aggarwal",
      "submitted": "2012-08-14T07:22:04",
      "bio": "Gaurav Luthra & Piyush Aggarwal - We are working as Research Assistants at Indian Institute of Technology, Delhi in the Department of Computer Science. Our work deals with the development of tools and technology and voice based applications for Community Radios and other NGOs.\r\n",
      "objective": "To familiarize the participants with the basics of Asterisk AGI Scripting in Python to build the IVR and creating a basic Web Application in Django for the same.",
      "type": "Tutorial",
      "id": 40,
      "description": "Participants attending the tutorial will get to know the basics of Asterisk and Python to build their own simple IVR System. They will also learn to develop a Web Interface to access/modify the IVR using Django."
    },
    {
      "slides": "http://evzijst.bitbucket.org/pycon.in/index.html",
      "votes": 14,
      "name": "39-healthy-webapps-through-continuous-introspection",
      "links": "",
      "title": "Healthy Webapps through Continuous Introspection",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/39-healthy-webapps-through-continuous-introspection",
      "section": "Web Development",
      "level": "Advanced",
      "comments": 0,
      "email": null,
      "proposer": "Erik van Zijst",
      "phone": null,
      "speaker": "Erik van Zijst",
      "submitted": "2012-08-13T20:33:16",
      "bio": "Erik has been a passionate software professional for nearly 15 years, subscribing to the idea that software is a craft, not an exact science.  Launching his career in his native Amsterdam in 1999, he served as chief architect for a financial market data startup until it was acquired in 2006, designing and coding both a real-time European-wide IP distribution platform for stock quotes, as well as a stock and options trading platform.\r\n\r\nIn 2007 he co-founded a Palo-Alto, CA based online real-time video distribution startup and acquired his first patent. In a deliberate move back to more hands-on coding, Erik joined Atlassian in 2008 and relocated to its headquarters in Sydney, Australia. Initially working on FishEye and Crucible, he later worked on various cross-product integration projects and in 2010 joined the newly formed team to run Bitbucket after its acquisition.\r\n\r\nCurrently based out of San Francisco, CA Erik continues to work on Bitbucket as one of its senior devs, with a special interest in large-scale scalability and performance challenges. His efforts in these areas have resulted in several successful open source projects, relied on by Bitbucket as well as many other sites out there.\r\n",
      "objective": "This talk explores the challenges of identifying and solving a whole series of typical performance problems affecting Python based webapps.\r\n\r\nI'll be looking specifically at those issues that only manifest themselves under the load, high levels of concurrency, runtime dynamics and configuration of your actual production environment, but elude QA and testing.\r\n\r\nI'll be using plenty of real examples from Bitbucket, which itself is written in Python.\r\n",
      "type": "Talk",
      "id": 39,
      "description": "Every application has its hotspots -- small portions of code that consume considerably more resources than all of the other code combined.\r\n\r\nPython webapps are no different. Some pages, invoked with the just the right, or wrong input, can bring a server to its knees, hogging the CPU and taking many seconds, or in extreme cases even minutes to render. By keeping workers tied up, the whole system can then become slow to respond, or collapse altogether.\r\n\r\nMany webservers have a crude built-in failsafe to prevent this. They automatically kill workers that fail to complete their requests in time. As a result, you may not fully appreciate, or indeed realize at all that you are routinely serving 500 pages, denying users access to your service, or leaving uncommitted database transactions -- possibly even slowly corrupting data.\r\nWorkers killed by force leave virtually no forensic traces and so even when issues are suspected, it's hard to pin them down.\r\n\r\nThe cause behind these hotspots can be poorly generated SQL queries from an ORM, an algorithm with non-linear complexity, excessive disk or network IO, or lock contention in the database -- to name just a few.\r\n\r\nOftentimes these problems escape a developer's attention, as dev and test environments simply don't have the dataset, level of concurrency or sheer size of the real thing.\r\n\r\nIn this talk we'll address the challenges of tuning your webapp with continuous automatic runtime inspection tools, including homegrown Dogslow. We'll uncover the pages that consume disproportionate amounts of time and cycles to complete and the pages that get killed altogether.\r\n\r\nWe'll discuss several ways to help you identify and eliminate the hotspots, both passively through monitoring exclusively, as well as actively by selectively interrupting workers before they get killed and examine how to effectively interpret the automatically collected forensic evidence."
    },
    {
      "slides": "",
      "votes": 8,
      "name": "37-solving-puzzles-with-python",
      "links": "",
      "title": "Solving Puzzles with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/37-solving-puzzles-with-python",
      "section": "Core Python",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Anand Chitipothu",
      "phone": null,
      "speaker": "Anand Chitipothu",
      "submitted": "2012-08-13T12:26:43",
      "bio": "[Anand](http://anandology.com) has been programming in Python since past 7 years or so. He conducts [public training courses][trainings] on Python in Bangalore.\r\n\r\nHe is the co-author of [web.py][], a web framework in Python.\r\n\r\nHe is currently employed by [Internet Archive][].\r\n\r\nLinks:\r\n\r\n* [Functional Programming with Python][fp] - Slides of tutorial at [PyCon India 2011][], Pune.\r\n\r\n[trainings]: http://anandology.com/trainings/\r\n[web.py]: http://webpy.org/\r\n[Internet Archive]: http://archive.org/\r\n[fp]: http://in.pycon.org/2011/static/files/talks/4/slides.html\r\n[PyCon India 2011]: http://in.pycon.org/2011/",
      "objective": "Learn Python's powerful data structures and functional programming concepts using solving puzzles as an example.",
      "type": "Tutorial",
      "id": 37,
      "description": "Solving puzzles is fun. Writing programs to solve puzzles is even more fun. Doing it is not so trivial. It requires choosing right data structures, algorithms and a bit of smartness.\r\n\r\nThis tutorial presents Python's powerful constructs like list comprehensions, generators, generator expressions and ideas from functional programming world to write programs to solve puzzles.\r\n\r\nI'm planning to cover:\r\n\r\n* 8 queens puzzle\r\n* sudoku\r\n* and more if time permits\r\n"
    },
    {
      "slides": "http://www.slideshare.net/sharmaadwait/pycon-talk",
      "votes": 34,
      "name": "36-artificial-intelligence-using-python",
      "links": "",
      "title": "Artificial Intelligence using Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/36-artificial-intelligence-using-python",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 6,
      "email": null,
      "proposer": "Adwait Sharma",
      "phone": null,
      "speaker": "Adwait Sharma",
      "submitted": "2012-08-12T19:16:16",
      "bio": "Adwait Sharma is a final year student in Computer Science at RNS Institute of Technology, Bangalore. He has published some International Research papers and has been contributing in Mozilla since 4 years.\r\n\r\nApart from Coding and R&D activities, Adwait likes chocolate and irritating people.",
      "objective": "This talk aims at the following points :\r\n\r\n1. Introduction to Artificial Intelligence.\r\n2. How Artificial Intelligence can be used for developing 'smarter' software ?\r\n3. Python AI Libraries",
      "type": "Talk",
      "id": 36,
      "description": "In this talk, I will give a quick course on AI and implementation of Identification trees and Constraint Propagation in Python.\r\n\r\nThis talk mainly aims at Python AI Libraries :\r\n\r\n1. AIMA - Python implementation for Algorithms like Tree-Search, Queue, A* and many more.\r\n\r\n2. OpenCV - With more than 500 functions including Face Recognition.\r\n\r\n3. PyBrain - Machine Learning Library for Python which can be used to test and compare different algorithms.\r\n\r\n4. NLTK - It provides a practical introduction to programming for Language Processing.\r\n\r\nAnd if time permits, I will give a demo of some intelligent bots developed in Python."
    },
    {
      "slides": "https://docs.google.com/document/d/1YCQh8k_tHc_tQuni_R0Zlc6gnTXm31k4gmQy99lgkXQ/edit",
      "votes": 11,
      "name": "35-mobile-apps-with-python-quick",
      "links": "",
      "title": "Mobile apps with Python, Quick!",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/35-mobile-apps-with-python-quick",
      "section": "Mobile",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Supreet Sethi",
      "phone": null,
      "speaker": "Supreet Sethi",
      "submitted": "2012-08-12T09:45:58",
      "bio": "The speaker is a python developer and co-founder to a recruitment platform in development called Hireswift available at http://hireswift.com. He has worked extensively in developing web applications in Django. He has recently started experimenting with Sencha for purpose of mobile app development. \r\n",
      "objective": "Introducing insightful way of creating mobile centered web-apps. With \"Mobile first\" as the motto, new web is all about addressing personal media through mobile phone. This puts certain sets of problems:\r\n \r\n  loose integration points compared to web\r\n \r\n  developing for 3-4 different platforms like Android, iOS, Windows and Blackberry\r\n \r\n  changing design priorities to accommodate smaller screen sizes, slower connections and low computing power.\r\n \r\nUsing Sencha and Django as the core frameworks, the talk provides a walk-through in developing clean back-end APIs and smooth front-ends without the pain.\r\n\r\n\r\n",
      "type": "Talk",
      "id": 35,
      "description": "With \"mobile first\" as vision statement, we harness significant power of using Python and django to produce clean back-ends especially using django-piston as key library.  \r\n\r\nThe Django framework is quite well known. It is a extremely quick and easy way to develop web sites and apps. Backed by strong developer community and wealth of knowledge available online, it is natural first choice for web-development. But in this case, we use it as an excellent web-app back-end which we drive a mobile front-end.\r\n\r\nSencha is fast becoming an important framework for developing mobile apps which runs elegantly on both Android and iPhone. With almost native API like look and feel, it works like a charm on Android and iPhone platform reducing development time dramatically. \r\n\r\nI will try to address the classic problem of disconnect between mobile and web-apps. Putting the system of producing both within single development cycle. Using django-piston as center piece library.  We will use extensively to create well defined APIs. These APIs will in turn be used with Sencha based front-ends.\r\n\r\nExtending further we will take a look at integration testing of this  framework towards creating a rock solid mobile experience. This will be followed by discussion on merits of using browser over native app frameworks.   "
    },
    {
      "slides": "https://speakerdeck.com/u/vaidik/p/queue-every",
      "votes": 12,
      "name": "34-queue-everything-and-please-everyone",
      "links": "",
      "title": "Queue Everything and Please Everyone",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/34-queue-everything-and-please-everyone",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Vaidik Kapoor",
      "phone": null,
      "speaker": "Vaidik Kapoor",
      "submitted": "2012-08-12T04:44:37",
      "bio": "Vaidik Kapoor is a student, currently doing B. Tech. in Computer Science Engineering at Jaypee Institute of Information Technology, NOIDA. He is a developer and contributor to a couple of FOSS projects. He has been programming in Python for about 2 years now. He did Google Summer of Code in 2011 with the Drupal project.\r\n\r\nIn his free time, he likes to watch movies, eat amazing food and advocate FOSS.\r\n\r\nWebsite: [http://vaidikkapoor.info](http://vaidikkapoor.info)",
      "objective": "The intent of this talk is to introduce the concepts of queueing in web development, tools at one\u2019s disposal, some common patterns and how it all can be used to reduce time to generate user feedback.",
      "type": "Talk",
      "id": 34,
      "description": "Many web apps try to do everything all at once, even things that are directly related to the response to the user. Doing all the tasks (including time consuming tasks) may affect the user experience badly. The user just wants to keep going and do his/her work and does not care about how the previous action affects the whole system and what all processing needs to be done for the same.\r\n\r\nA user wants to post a message. Your system delivers that message and results of some associated complex processing to different recipients and tones of notification channels. But do we have to do all these things all at once while the user awaits your system to do all these things and then generate feedback for the user? The user just wants to do what he/she wishes to do and move on.\r\n\r\nThis talk will introduce the concepts of queueing in web development, tools at one\u2019s disposal, some common patterns and how it all can be used to do everything at the back to please everyone using your application! I will also discuss some use-cases in which this approach can prove to be beneficial. And if there is enough time, I will try to show a show demo of one (or more) tools in this context.\r\n\r\nTools:\r\n\r\n* Redis\r\n* RabbitMQ\r\n\r\nLibraries:\r\n\r\n* Hotqueue\r\n* PyRes\r\n* Pika (RabbitMQ)\r\n* Celery"
    },
    {
      "slides": "http://bit.ly/plivoaws",
      "votes": 15,
      "name": "33-managing-aws-cloud-with-python",
      "links": "",
      "title": "Managing AWS cloud with python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/33-managing-aws-cloud-with-python",
      "section": "Infrastructure",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Rohit Gupta",
      "phone": null,
      "speaker": "Rohit Gupta",
      "submitted": "2012-08-09T16:58:11",
      "bio": "Currently working as a Engineer in Plivo Inc.\r\n\r\nGithub: https://github.com/rohit01\r\n\r\nLinkedIn: http://in.linkedin.com/in/rohit01\r\n\r\n",
      "objective": "How to manage the rapidly changing & growing number of resources in the cloud",
      "type": "Talk",
      "id": 33,
      "description": "- What is cloud computing?\r\n- Python cloud interface - boto\r\n- Typical scenario - Growing Infrastructure\r\n- Problem: Administrative tasks associated\r\n- Solution\r\n- Boto code examples\r\n"
    },
    {
      "slides": "http://satyajit.ranjeev.in/media/taming.txt",
      "votes": 32,
      "name": "32-taming-the-snake-with-the-king-of-editors-vim",
      "links": "",
      "title": "Taming the snake with the king of editors - Vim.",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/32-taming-the-snake-with-the-king-of-editors-vim",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 3,
      "email": null,
      "proposer": "Satyajit Ranjeev",
      "phone": null,
      "speaker": "Satyajit Ranjeev",
      "submitted": "2012-08-07T08:13:34",
      "bio": "I am the team lead for a Python project at MQuotient, Pune. \r\n\r\nI got introduced to Vim in the early days of GNU/Linux though have been consistently using it for more than four years. I started my career as a Systems Administrator writing Perl scripts. About four years since I have been a Python developer mainly creating web applications. \r\n\r\nDuring this time I have rekindled many a programmer to get back to Vim and have introduced it to several others. ",
      "objective": "One would hopefully get a better idea of using Vim especially while coding in Python and improve their productivity.",
      "type": "Talk",
      "id": 32,
      "description": "What makes Vim special even after 20 years since the first release and its lineage from vi 35 years back? Lend me your ears fellow pythonists and let me shed some light to one of the most popular editors of all time.\r\n\r\nThese are the key areas I plan to talk:\r\n\r\n- A brief history of vi and Vim.\r\n- Why in world must I use something archaic?\r\n- Understanding the grammar of Vim commands.\r\n- Becoming more productive while coding Python.\r\n- Extending Vim commands to the terminal.\r\n- Using Vim and ipython side by side.\r\n- Customising Vim to your likes.\r\n- Distributing your vim files."
    },
    {
      "slides": "",
      "votes": 6,
      "name": "31-the-web-micro-framework-potpourri",
      "links": "",
      "title": "The web micro framework potpourri",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/31-the-web-micro-framework-potpourri",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Arif Amirani",
      "phone": null,
      "speaker": "Arif Amirani",
      "submitted": "2012-08-07T08:11:36",
      "bio": "Currently an entrepreneur working on stealth projects primarily in Python and an overall fun guy! A few of my projects include:\r\n\r\n* APIKitchen.com - An API explorer that makes API development and testing very easy with support for snapshots for easy debugging.\r\n* Camper - Basecamp Android client\r\n* Stockmeter - Mac stock tracking application\r\n* Logcast  - Cloud logging service (WIP)",
      "objective": "The intent is to expose attendees to the latest and greatest micro-framemworks available and provide enough insight on each one so as to be able to pick the right one for the job.",
      "type": "Talk",
      "id": 31,
      "description": "This will be a detailed session with code demos and walkthroughs for all the major (and active) micro-frameworks available with a sample application. The attendees will thus be aware of:\r\n\r\n* The state of the projects\r\n* The pros and cons of each\r\n* Difficultly level of implementation\r\n* Any gotchas\r\n\r\nI would like to limit the number of frameworks to 5 as I would like to cover some details within the allocated 45 mins. The current list of frameworks are:\r\n\r\n* Bottle\r\n* Flask\r\n* cherrypy\r\n* Bobo\r\n\r\nIf you would like to add more to the list above, please do comment."
    },
    {
      "slides": "",
      "votes": 21,
      "name": "30-highlights-of-python-3-3",
      "links": "",
      "title": "Highlights of Python 3.3",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/30-highlights-of-python-3-3",
      "section": "Core Python",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Nick Coghlan",
      "phone": null,
      "speaker": "Nick Coghlan",
      "submitted": "2012-08-06T13:47:46",
      "bio": "Nick is a CPython core developer and a nominated member of the Python Software Foundation.\r\n\r\nI am the current maintainer of the runpy and contextlib standard library modules, and co-maintainer of the functools module, ipaddress module, import system and CPython's compiler and bytecode execution infrastructure. I'm also active in reviewing proposals on the core development mailing lists, am the author or co-author of several accepted (and rejected!) PEPs and was the approval authority for a number of PEPs accepted into Python 3.3.",
      "objective": "Attendees will hopefully learn of some of the more interesting features coming in Python 3.3, when compared to both Python 2.7 and 3.2.",
      "type": "Talk",
      "id": 30,
      "description": "This will be a review session, covering some of the interesting features in Python 3.3.\r\n\r\nFor the benefit of attendees that are still primarily using Python 2.x, the presentation will also cover a few of the key advantages of the Python 3.x series that aren't available in Python 2.7 or as backports on the Python Package Index."
    },
    {
      "slides": "",
      "votes": 14,
      "name": "29-path-dependent-development",
      "links": "",
      "title": "Path Dependent Development",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/29-path-dependent-development",
      "section": "_Others",
      "level": "Intermediate",
      "comments": 1,
      "email": null,
      "proposer": "Nick Coghlan",
      "phone": null,
      "speaker": "Nick Coghlan",
      "submitted": "2012-08-06T13:29:38",
      "bio": "Nick is a CPython core developer and a nominated member of the Python Software Foundation.\r\n\r\nSince June 2011, after more than 12 years in the aerospace and defence sector, Nick has been working on internal tools for Red Hat, including PulpDist, a set of Pulp plugins and other tools intended to make it easier to maintain a private filtered data mirroring network on commodity hardware.\r\n\r\nThe views presented in this talk are based on my personal observations of the open source development community and the defence sector over the better part of a decade.\r\n\r\nA version of this talk is also being presented at PyConAU 2012.",
      "objective": "This talk is aimed at introducing a slightly different way of thinking about many of the complex trade-offs that are involved in creating and shipping useful software, and the way those trade-offs influence the evolution of a piece of software over time.",
      "type": "Talk",
      "id": 29,
      "description": "The PulpDist project uses SQL Alchemy as part of a custom JSON validator. This could be seen as an unusual choice, so it's worth exploring the way this approach came to be adopted.\r\n\r\nPracticing iterative development means coping with the inevitable tension between \"doing the simplest thing that could possibly work\" to meet immediate project requirements and avoiding \"reinventing the wheel\" in order to take full advantage of existing software components.\r\n\r\nThis means that iterative software designs are inevitably path dependent: decisions made in early iterations can shape later aspects of a project in unexpected ways. These early influences may even predate the project itself, instead being a consequence of wider organisational policies and the personal preferences and abilities of key developers.\r\n\r\nUnderstanding some of these factors can help with understanding why:\r\n- \"good enough\" is usually a better target than \"perfect\"\r\n- \"Not Invented Here\" syndrome is not always the villain it is frequently made out to be\r\n- the need to extensively rewrite existing components is not always a sign of past failure"
    },
    {
      "slides": "",
      "votes": 20,
      "name": "28-py-101-beginners-guide-to-create-a-python-package",
      "links": "",
      "title": "PY 101 - Beginners guide to create a python package",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/28-py-101-beginners-guide-to-create-a-python-package",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "kracekumar",
      "phone": null,
      "speaker": "kracekumar",
      "submitted": "2012-08-03T07:26:13",
      "bio": "I am [kracekumar](www.kracekumar.com) works @ [hasgeek](http://hasgeek.com) , pythonista, FOSSian. I am using python for past 2 years for variety of personal and professional tasks like auto mounting disks during linux startup, song fetcher, web development with Flask, IRC bot written in Twisted etc ... I have contributed to various open source projects like [twython](https://github.com/ryanmcgrath/twython), [clint](https://github.com/kennethreitz/clint), [args](https://github.com/kennethreitz/args), [flask](https://github.com/mitsuhiko/flask/), [envoy](https://github.com/kennethreitz/envoy), [mead](https://github.com/kennethreitz-archive/mead).\r\nI am the creator of [pycoderwall](http://pypi.python.org/pypi/pycoderwall/0.0.7), \r\n[iplsaga](http://www.iplsaga.in) and various [projects](https://github.com/kracekumar). \r\n\r\nMore about me:\r\n------\r\n[Github](http://github.com/kracekumar), [Twitter](http://twitter.com/kracetheking), [Quora](http://www.quora.com/Kr-Ace-Kumar-Ramaraju)",
      "objective": "Guide to create python package(third party libraries) and release package to [pypi](http://pypi.python.org/pypi).",
      "type": "Tutorial",
      "id": 28,
      "description": "Normal python user will use third party libraries like `requests` or `json`,  we are aware how to these libraries work. Lets us develop one such application and upload to pypi.\r\n\r\nIn this tutorial following topics will be covered\r\n\r\n1. How does `python setup.py install` works\r\n2. How does `pip install Flask` works\r\n3. Usage of various tools like `distribute` or `setuptools` \r\n4. Organizing python package.\r\n5. Testing python packages in different versions like `python 2.6`, `python 2.7`, `pypy1.8` etc using [travis](http://travis-ci.org/)\r\n6. How to use github to manage the package.\r\n7. How to use readthedoc.org to setup docs(basic)\r\n\r\nRequirements\r\n-------\r\n1. Basic Python knowledge\r\n2. Little familiarity with github and git.\r\n3. Preferably Linux based OS.\r\n4. Your own laptop."
    },
    {
      "slides": "",
      "votes": 27,
      "name": "27-text-analysis-with-python",
      "links": "",
      "title": "Text Analysis with python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/27-text-analysis-with-python",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 1,
      "email": null,
      "proposer": "Vijay Ramachandran",
      "phone": null,
      "speaker": "Vijay Ramachandran",
      "submitted": "2012-08-03T05:11:30",
      "bio": "I've been developing software for almost 20 years now. Most of it was bulding boiler-plate scalable application server software. However, I spent the last 5 years using ML and AI techniques to make sense out of user generated text. My LI profile: http://in.linkedin.com/in/vijayramachandran",
      "objective": "Learn how to use python to perform common text analysis and machine learning tasks such as entity recognition, sentiment analysis, product recommendations, etc.",
      "type": "Talk",
      "id": 27,
      "description": "Data mining of text using machine learning is fast becoming an essential part of a programmer's skillset. I'll talk about my experiences performing various text mining tasks using machine learning and statistical techniques. I'll cover the basic mathematical concepts behind techniques such as classification and clustering, and how I used python in creating software which uses these techniques."
    },
    {
      "slides": "http://www.slideshare.net/sivasubramaniam3/django-introduction-demo",
      "votes": 33,
      "name": "26-django-introduction-demo",
      "links": "",
      "title": "Django \u2013 Introduction & Demo ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/26-django-introduction-demo",
      "section": "Web Development",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Sivasubramaniam Arunachalam",
      "phone": null,
      "speaker": "Sivasubramaniam Arunachalam",
      "submitted": "2012-08-01T17:03:58",
      "bio": "Python enthusiast and open source developer currently works in SAP Labs.",
      "objective": "Basic Introduction to Python and Django and the live demo to show how to build a simple real time application. This demo contains \r\n1) Creating a New Apps\r\n2) Customizing the Existing Apps\r\n3) Using Third Party Apps\r\n",
      "type": "Tutorial",
      "id": 26,
      "description": "* Power of Python\r\n* Python - Unlimited\r\n* Django \u2013 Web Framework for Perfectionists (with Deadlines)\r\n* Why Django? (For Techies & Business Decision Makers)\r\n* Demo \u2013 Developing better Web apps more quickly and with less code\r\n* Django \u2013 Tips & Tricks\r\n* Django \u2013 Advanced\r\n* How Java Web Frameworks Inspired from Django"
    },
    {
      "slides": "",
      "votes": 32,
      "name": "25-python-for-perl-programmers",
      "links": "http://code.google.com/edu/languages/google-python-class/\r\nhttp://everythingsysadmin.com/perl2python.html\r\n",
      "title": "Python for Perl Programmers",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/25-python-for-perl-programmers",
      "section": "Core Python",
      "level": "Beginner",
      "comments": 3,
      "email": null,
      "proposer": "Saran",
      "phone": null,
      "speaker": "Saran",
      "submitted": "2012-08-01T16:34:44",
      "bio": "A open source perl contributor\r\n\r\nhttp://in.linkedin.com/in/perlsaran\r\n@talk2saravanan\r\n@perlsaran\r\nvimsaran.posterous.com\r\nunixsaran.posterous.com\r\n",
      "objective": "A Perl/PHP Programmer can easily learn Python in this session\r\n\r\nThis session covers the difference in terms of Code/syntax level \r\n[ Perl code Vs Python Code. ]\r\n\r\nThere will be a code walkthrough in Perl vs Python in the below description topics",
      "type": "Talk",
      "id": 25,
      "description": "Python basics for perl programmers [ Perl Code Vs Python Code ]\r\n############################\r\n\r\n* String Comparison \r\n* Joining and Splitting\r\n* Hash/Dict\r\n* Processing every line in a file\r\n* Regular Expressions\r\n* Importing Modules\r\n"
    },
    {
      "slides": "",
      "votes": 4,
      "name": "24-gaphas-a-diagramming-widget-library-for-your-open-source-software",
      "links": "",
      "title": "Gaphas - A Diagramming Widget Library for your Open Source Software",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/24-gaphas-a-diagramming-widget-library-for-your-open-source-software",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Saheb Motiani",
      "phone": null,
      "speaker": "Saheb Motiani",
      "submitted": "2012-07-31T14:28:36",
      "bio": "I am a python enthusiast and open source developer. I love tweeking open source codes and using it for my purpose. I am working for ASCEND modelling environment as part of my GSOC 2012 project. I am an pre final year undergrad having good experince in software development and have been working on Python and Linux since past 2-3 years.   ",
      "objective": "To express the extensibility and ease of using Gaphas for creating a canvas modeller or icon editor for your software. Today every software has been in a need of creating a canvas for itself, so Gaphas provides a very easy way of creating it and is written in pure python. ",
      "type": "Talk",
      "id": 24,
      "description": "The talk will be focused on the following points:\r\n\r\na)  What is Gaphas and why should we use it?\r\n\r\nb)  Some cool features of Gaphas.\r\n\r\n   ->  Ease of extending it and using it in your piece of code.\r\n\r\n   ->  Constraint Solving, something new and tricky.\r\n\r\n   ->  No bounding box calculations.\r\n\r\n   ->  Small Code for making big things work.\r\n\r\n   ->  Documentation of the modules.\r\n\r\n   ->  Test files for the functions is already present.\r\n\r\nc) Where is Gaphas used? And my application of Gaphas in ASCEND for my GSOC project.\r\n\r\nd) Simple steps to create your own canvas or icon editor using Gaphas."
    },
    {
      "slides": "",
      "votes": 6,
      "name": "23-ansible-a-radically-simple-configuration-management-and-deployment-framework",
      "links": "",
      "title": "Ansible - A radically simple configuration management and deployment framework",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/23-ansible-a-radically-simple-configuration-management-and-deployment-framework",
      "section": "Infrastructure",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Nikhil Singh",
      "phone": null,
      "speaker": "Nikhil Singh",
      "submitted": "2012-07-31T07:09:34",
      "bio": "Ex-Yahoo! and currently employed at Lexity Labs, Bangalore.",
      "objective": "The objective is to spread the work around about Ansible. Ansible is a simple configuration management and deployment framework that is very simple to set up and easy to understand.\r\n\r\n",
      "type": "Talk",
      "id": 23,
      "description": "Ansible is a radically simple model-driven configuration management, deployment, and command execution framework. Other tools in this space have been too complicated for too long, require too much bootstrapping, and have too much learning curve. By comparison, Ansible is dead simple and painless to extend. Puppet and Chef have about 60k lines of code. Ansible\u2019s core is a little over 2000 lines.\r\n\r\nThis talk will cover the following areas:\r\n1. Basics of configuration management systems.\r\n2. Why use Ansible?\r\n3. Introduction to Ansible\r\n     + Running simply ad-hoc commands\r\n     + Using a few Ansible modules to demonstrate how the modules work\r\n     + Explanation of playbooks and possibly a short tutorial\r\n\r\nI will try and run modules / commands live as much as possible so that people can see Ansible in action."
    },
    {
      "slides": "https://github.com/rtnpro/pycon_india_2012_i18n_and_l10n/raw/master/slides/slides.pdf",
      "votes": 22,
      "name": "22-develop-for-an-international-audience",
      "links": "",
      "title": "Develop for an international audience",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/22-develop-for-an-international-audience",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Ratnadeep Debnath",
      "phone": null,
      "speaker": "Ratnadeep Debnath",
      "submitted": "2012-07-30T20:54:02",
      "bio": "Ratnadeep Debath, nicknamed @rtnpro, is an Open Source enthusiast and a Python lover. He works at [Transifex](https://www.transifex.com) as a Developer and QA. Although he gets paid to write Open Source code, in weekends, he takes out his time to contribute voluntarily to other Open Source projects.",
      "objective": "This talk is all about:\r\n- why internationalize and localize?\r\n- How to do it?\r\n- Do's and Don'ts\r\n- Challenges in localization\r\n- Modern tools for agile localization\r\nIn short, it's all about how to develop your Python app for the international market :)",
      "type": "Talk",
      "id": 22,
      "description": "This talk starts with introducing the concepts internationalization and localization and their importance to the audience. When speaking of internationalization, unicode and time zones cannot be avoided :)\r\n\r\nWith the help of code snippets, this talk then explains how to internationalize a Python/Django app. It also deals with how to effectively localize contents stored in a database. With my experience in building localization tools and helping people internationalize, I share some undocumented tips on how to internationalize in a better way.\r\n\r\nThat was the easy part. Internationalization is not that tough, is it? But what about mmm... say translating your app in around 60 languages. It can get crazy. Developers don't like translating, neither do translators like technical slang (git, svn, bugzilla, etc.). How do you communicate with the translators, share with them your source strings and collect translations back? Oh! I forgot. What about doing all these weekly for weekly releases?\r\n\r\nDo not worry! We are in 2012 and things are looking a lot better now. There are modern platforms available to make localization a breeze, no matter, how many languages you need. This talk ends with briefly explaining tools like Transifex, Mozilla's Pontoon, etc. Since they are open source tools, you can also contribute to them.\r\n\r\nTime for Q&A"
    },
    {
      "slides": "",
      "votes": 29,
      "name": "20-building-better-apis",
      "links": "",
      "title": "Building better APIs",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/20-building-better-apis",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Hemant Kumar",
      "phone": null,
      "speaker": "Hemant Kumar",
      "submitted": "2012-07-25T07:43:18",
      "bio": "I have been programming for close to 11 years now and last 5 years mostly using languages such as Ruby, Javascript and Scala. Before Ruby, I was using python but mostly without my managers knowing about it. \r\n\r\nAlso, I am a core contributor to Rails, EventMachine (twisted thingy but for Ruby), Fog (A Ruby cloud library), Rubinius (pypy for Ruby) and have written several popular libraries of my own.  Contributed to community effort such as - \"Advanced Rails recipes\" book.\r\n\r\nAs a consultant and co-founder of Codemancers (http://www.codemancers.com), in last few years I have built several web applications that only provide API access for mobile devices. While doing so, I have learnt certain best practices and certain oddities about which I am not entirely sure. It will be nice to bring them out in front of Python community and see if they hold water.\r\n\r\n",
      "objective": "A lot of web development today deals with creating APIs that can power mobile apps or even pure Javascript web apps. The objective of this talk is, to share best practices and have open conversation about certain practices which are considered controversial.",
      "type": "Talk",
      "id": 20,
      "description": "The talk will be a highly interactive session with following things overall:\r\n\r\n1. When to build an API? Keep it with existing web application or extract the API app out?\r\n2. API versioning. Pros & Cons and controversy.\r\n3. Authentication and pagination for RESTful APIs.\r\n4. Framework support. Unit testing, presentation of resources. Builders vs format serializers.\r\n5. Hypermedia as Engine of application state (http://en.wikipedia.org/wiki/HATEOAS )\r\n\r\n"
    },
    {
      "slides": "",
      "votes": 20,
      "name": "19-rewriting-the-wayback-machines-live-web-proxy-in-python",
      "links": "",
      "title": "Rewriting the Wayback machine's live web proxy in Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/19-rewriting-the-wayback-machines-live-web-proxy-in-python",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Noufal Ibrahim",
      "phone": null,
      "speaker": "Noufal Ibrahim",
      "submitted": "2012-07-24T11:55:26",
      "bio": "This talk will be presented by [Anand Chitipothu](http://anandology.com) and [Noufal Ibrahim](http://nibrahim.net.in). Both of them are employees of the Internet Archive, working remotely from Bangalore.\r\n\r\nAnand is a software consultant and trainer. He has been working with the Archive since 2007. He is co-ordinator of the [PyCon India 2012](http://in.pycon.org/2012) conference.\r\n\r\nNoufal is a freelance trainer and consultant based out of Bangalore. Founder of PyCon India and organiser of the first two conferences in India.",
      "objective": "This talk will discuss the development and design of a high performance web app which successfully replaced a decade old existing service without any hiccups. ",
      "type": "Talk",
      "id": 19,
      "description": "The [wayback machine](http://web.archive.org/) is a high traffic website that has been online for over a decade. It was a mostly Java application. One component of the application is the Liveweb proxy. This is an HTTP proxy that archives a resource which is requested through it and the core data source for the wayback machine. \r\n\r\nThe liveweb proxy was [rearchitected from scratch in Python](https://github.com/internetarchive/liveweb) and deployed on the actual website and has been running for a few months now without a single hitch. There were limitations in the standard library which needed to be worked around, careful tuning of parameters to balance disk I/O and memory usage, fine details of the HTTP protocol that needed to be understood and respected. \r\n\r\nThis talk discusses the architecture and design of the new system to handle the kind of traffic and patterns which are expected of an archiving proxy and how it was deployed. "
    },
    {
      "slides": "http://www.slideshare.net/avinash_prasad/real-time-webappspycon2012v1",
      "votes": 19,
      "name": "18-building-real-time-django-apps",
      "links": "",
      "title": "Building Real Time Django Apps",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/18-building-real-time-django-apps",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 3,
      "email": null,
      "proposer": "Avinash Prasad",
      "phone": null,
      "speaker": "Avinash Prasad",
      "submitted": "2012-07-22T05:58:55",
      "bio": "An avid Python programmer and tech geek. A Software Engineer by profession, have been working on Python/Django since 4 years. Also involved in mentoring/training professionals on Python as well.\r\n\r\nI have been principally involved in designing/building web applications using Django and integrating them with various systems like LDAP, SMTP, IMAP servers. Also have been working on HTML 5, jQuery/JavaScript  since sometime and integrating them with Django.",
      "objective": "The main objective is to enlighten the audience how Django can be used to build Real Time Applications. Integration of Djago with HTML 5 can bring about a whole new world of applications before us. The talk emphasizes how one can build Real Time Django Apps powered by HTML 5 and JavaScript.",
      "type": "Talk",
      "id": 18,
      "description": "The session would explore the following pointers that would lead to development of Real Time Django Apps.\r\n\r\n1. What is a Real Time App?\r\n2. Powering Django with HTML5\r\n3. Django-SocketIO - What is it? & How it can be used to build real time app?\r\n4. A demo app using DjangoSocketIO, WebSockets.\r\n"
    },
    {
      "slides": "",
      "votes": 12,
      "name": "17-rails-for-django-developers",
      "links": "",
      "title": "Rails for Django developers",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/17-rails-for-django-developers",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 5,
      "email": null,
      "proposer": "Shabda Raaj",
      "phone": null,
      "speaker": "Shabda Raaj",
      "submitted": "2012-07-21T15:43:19",
      "bio": "[Shabda Raaj](http://shabdaraaj.com/) is a developer at [Agiliq](http://agiliq.com), where he builds amazing apps. He has been programming with Python for about 5 years and Django for about 3. He loves working with Python and always amazed how giving Python and the larger open source community is. He hopes to make a more beautiful world through writing software.\r\n\r\nHis open source contributions in Python are at [Agiliq Github](http://github.com/agiliq) and his Rails apps are on his [personal github](http://github.com/shabda) account.",
      "objective": "Django has emerged as the most used Python web framework. Rails is the most used Ruby web framework.\r\n\r\nBeing a polyglot is one of the best way to write better code. Ergo, learning Rails will make you a better Django developer.\r\n\r\n",
      "type": "Talk",
      "id": 17,
      "description": "We will look at how Django concepts map to Rails concepts.\r\n\r\nEg\r\n\r\nRails Controller -> Django Views  \r\nconfig/rotes.rb -> urls.py  \r\nRails view -> Django templates   \r\n(... etc)  \r\n\r\nWe will look at the Django poll app and a Rails poll app and compare them.\r\n\r\nWe will look at some areas where Rails is better, and Django needs to learn from Rails.\r\n\r\n(Eg Rails routing is way simpler than Django urls.)"
    },
    {
      "slides": "",
      "votes": 12,
      "name": "16-testing-embedded-systems-with-python",
      "links": "",
      "title": "Testing Embedded Systems with Python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/16-testing-embedded-systems-with-python",
      "section": "Embedded/Real-time Python",
      "level": "Beginner",
      "comments": 2,
      "email": null,
      "proposer": "Sibin Thomas",
      "phone": null,
      "speaker": "Sibin Thomas",
      "submitted": "2012-07-21T14:20:30",
      "bio": "Sibin is an Engineer who has for most of his professional life worked on short range wireless systems; starting with the Ultra-WideBand technology and then moving on to the Bluetooth technology. Apart from being an engineer the roles he enjoys the most are that of a teacher and mentor.\r\n\r\nEven though he likes to contribute towards the entire spectrum of tasks involved in getting the envisioned system working reliably for the user, from working on the initial specification, all the way to writing the user manual; his penchant lies for designing and deploying the software part of the embedded system.\r\n\r\nHe is a firm believer of test driven development (TDD) and also in the Agile principles; and he would like to share his experiences in harnessing the power of Python to test embedded systems.",
      "objective": "This session will help the attendees realize how the power of Python can be harnessed to test embedded systems.\r\n \r\nAttendees will learn -\r\n * How to unit test embedded systems with Python.\r\n * Useful tools and libraries which will enable attendees to do the above.\r\n * Easy Test vector generation and analysis of test results/output.",
      "type": "Talk",
      "id": 16,
      "description": "This session will help the attendees to learn how to perform unit testing of software meant for Embedded Systems on host platforms with the help of Python. The richness and power of Python and ease of integration with other languages (like C or C++) makes Python the ideal environment to test Embedded Systems (too). \r\n\r\nPython helps by providing extremely powerful and easy methods to generate test vectors and analyze and compare the outputs. Python also has well entrenched and powerful unit testing frameworks based on the popular xUnit architecture. This enhances the agility of the project by taking testing to the XTreme."
    },
    {
      "slides": "",
      "votes": 28,
      "name": "15-developing-ubuntu-apps-for-fun-and-profit",
      "links": "",
      "title": "Developing Ubuntu apps for fun and profit",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/15-developing-ubuntu-apps-for-fun-and-profit",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Javed Khan",
      "phone": null,
      "speaker": "Javed Khan",
      "submitted": "2012-07-21T14:11:45",
      "bio": "The speaker is [Javed](https://github.com/tuxcanfly) [Khan](https://twitter.com/tuxcanfly) aka [tuxcanfly](http://tuxcanfly.appspot.com/). He loves coding, math, philosophy, linux, python and vim. \r\n\r\nHe has contributed code to various projects like [LinuxDC++](https://launchpad.net/linuxdcpp), [ffmpegthumbnailer](http://code.google.com/p/ffmpegthumbnailer/) and [kupfer](http://engla.github.com/kupfer/).\r\n \r\nHis recent app [FlashBox](https://myapps.developer.ubuntu.com/dev/apps/1235/) qualified for [Ubuntu App Showdown](http://developer.ubuntu.com/showdown/apps/).\r\n\r\nHe helps people build Amazing Apps at [Agiliq](http://agiliq.com/).",
      "objective": "To help pythonistas get started with GUI programming in Ubuntu so that they can create apps / contribute to existing apps for the [Software Centre](https://apps.ubuntu.com/cat/).",
      "type": "Tutorial",
      "id": 15,
      "description": "We will use [Quickly](http://developer.ubuntu.com/resources/tools/quickly/) - a tool developed by Canonical to make it easier to develop and distribute apps. Some tools that will be introduced - Glade, PyGTK, bzr, launchpad, PPA, etc.\r\n\r\nThere will be a hands-on tutorial session to showcase the workflow covering code, design, packaging, installation and testing of a simple app.\r\n\r\n\r\n**Requirements**:\r\n\r\nYou'll need \r\n\r\n- a working Ubuntu installation (12.04 preferred)\r\n- precise-proposed repo enabled (required for a bugfix in quickly) See: [http://askubuntu.com/a/157432](http://askubuntu.com/a/157432) \r\n- `sudo apt-get install quickly-ubuntu-template`\r\n- launchpad.net account: you can create one at [https://login.launchpad.net/+new_account](https://login.launchpad.net/+new_account) \r\n- openPGP key to sign your ubuntu package: you can add one from your profile page on launchpad"
    },
    {
      "slides": "",
      "votes": 14,
      "name": "14-django-templates-for-web-designers",
      "links": "",
      "title": "Django templates for Web Designers ",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/14-django-templates-for-web-designers",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Shreyank Gupta",
      "phone": null,
      "speaker": "Shreyank Gupta",
      "submitted": "2012-07-20T09:49:07",
      "bio": "Shreyank Gupta works as a Software Engineer at Red Hat. He programs in Python, Ruby and JavaScript.",
      "objective": "The objective is to provide  UI and Web Designers with an overview of using the Django template language.\r\n",
      "type": "Talk",
      "id": 14,
      "description": "Django is a high-level Python based web framework that encourages rapid development and clean, pragmatic design.\r\n\r\nDjango comes with it's very own templating layer, which is not merely python embedded into HTML, but it is a dumb python-like DSL which, by design, keeps programming logic out of the templates and keeps the presentation layer clean.\r\n\r\nIn this talk we will introduce ourselves to the Django Template Language and cover most of the useful tags and filters. We will also look into how to write custom tags and filters."
    },
    {
      "slides": "https://docs.google.com/presentation/d/1menlrYBD8vaYmREiPBdiMgonyHwI4Bj0Gbxjik2G8Qg/present",
      "votes": 8,
      "name": "13-python-as-a-learning-language-an-undergraduate-students-view",
      "links": "",
      "title": "Python As a Learning Language (An undergraduate student\u2019s view)",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/13-python-as-a-learning-language-an-undergraduate-students-view",
      "section": "_Others",
      "level": "Beginner",
      "comments": 6,
      "email": null,
      "proposer": "Rishi Mukherjee",
      "phone": null,
      "speaker": "Rishi Mukherjee",
      "submitted": "2012-07-16T14:27:52",
      "bio": "A pre-final year Computer Science undergraduate student who started programming in 1st year of his course but chose python instead of C to learn. He is a regular programmer at different online programming contests with python as the tool. He also is learning image processing and has keen interest in Artificial Intelligence. He loves promoting use of Open Source Softwares.\r\nBlog \u2013 http://pythongeek.blogspot.in/",
      "objective": "1. Show how easy learning can be, when done with python.\r\n2. Convince and create awareness among students and indian universities to make python as the base to learn programming.\r\n3. Why python shall be used in all algorithmic contests.",
      "type": "Talk",
      "id": 13,
      "description": "An experience of an Indian student on the benefits of learning python as his first programming language.\r\nIn the present century when the number of ideas, theories and algorithms are increasing exponentially, a learner must avoid external problems that pose as hindrance in the process of learning. The choice of python as a language for learning is then obvious. The learner, can concentrate on algorithms and logic rather than syntax of the language. Since python is a general purpose language, it can be used in as diverse areas as learning game development to biological programming. As a beginner a driver must concentrate on how to drive rather than how the car works internally.\r\nAlgorithmic contests are hosted all over the world many of which do not include python. Since python is already known as 'working pseudocode', python is an obvious choice in these contests.\r\n\r\nThe talk would start with the motivation that made me start my programming life with python. Further I will talk about the difficulties that students of non top engineering colleges face to learn programming with C and how this can be made way better if python is used for the purpose. Next, I will talk about the main reasons to consider python as the mother of all learning languages. Then, I will compare some algorithm implementations written with python and C that a student learns in his course. After that, the talk will be about different reasons to consider for using python for different algothmic contests. Then I would suggest some steps that can be taken by the community to make awareness among students of different parts of the country to make use of python. With python, we get fast understanding, which leads to fast and creative development, which further leads to the fast development of the country."
    },
    {
      "slides": "",
      "votes": 22,
      "name": "12-cryptanalysis-using-python",
      "links": "",
      "title": "Cryptanalysis using python",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/12-cryptanalysis-using-python",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 5,
      "email": null,
      "proposer": "Nivedita Datta",
      "phone": null,
      "speaker": "Nivedita Datta",
      "submitted": "2012-07-15T20:01:00",
      "bio": "Nivedita is currently a student of Indian Institute of Science (IISc, Bangalore) pursueing her MS from SERC (Supercomputer Education & Research Centre) department and is an ex-employee of Infosys Limited where she worked for 19 months.",
      "objective": "To write codes which will allow us to attack the simple cipher using classical methods",
      "type": "Talk",
      "id": 12,
      "description": "Introduction - what this is not\r\nIntro to Python\r\nThe Monome-Dinome cipher\r\nThe basic code\r\nCryptanalysis I - the Row Digits\r\nCryptanalysis II - the Trick\r\nCryptanalysis III - Removing the guesswork\r\nCreating the programs\r\nThe complete source code"
    },
    {
      "slides": "",
      "votes": 22,
      "name": "11-visualizing-the-learning-in-ml-algorithms",
      "links": "www.brocabrain.blogspot.com\r\nwww.github.com/enthought/chaco\r\nwww.github.com/enthought/enaml",
      "title": "Visualizing the Learning in ML Algorithms",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/11-visualizing-the-learning-in-ml-algorithms",
      "section": "Scientific Computing",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Jaidev Deshpande",
      "phone": null,
      "speaker": "Jaidev Deshpande",
      "submitted": "2012-07-13T09:58:29",
      "bio": "I'm an electrical engineer and an amateur in machine learning and signal / image processing. Currently an intern at Enthought, Inc, working on data analysis and visualization.",
      "objective": "Mostly useful for machine learning education, this talk provides an insight into the different processes of how a classifier or a regression analysis adapts itself to a random dataset. In contrast, this might also revel interesting features of the data itself.",
      "type": "Talk",
      "id": 11,
      "description": "Data alone is meaningless. It can be made sense of only in terms of the operations carried out on it. Of these operations, machine learning is one of the most versatile and difficult. This talk will focus on visualizing the learning process in popular machine learning algorithms like perceptrons, backpropagation (stochastic gradient descent), and support vector machines. The machine learning algorithms used will be from the scikit-learn package.\r\n\r\nThe visualizations will be built using Chaco, Enthought's 2-D plotting library and the talk will also feature a data-explorer GUI made in Enaml, Enthought's new DSL for pythonic UIs.\r\n\r\nWhile the most immediate benefit of the talk is to students of machine learning, the visualizations can also be used to explore data in general, as we shall see."
    },
    {
      "slides": "",
      "votes": 28,
      "name": "10-guide-to-tdd-and-flight-to-bdd-with-python-django",
      "links": "",
      "title": "Guide to TDD and Flight to BDD with python/django",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/10-guide-to-tdd-and-flight-to-bdd-with-python-django",
      "section": "Web Development",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Saket Bhushan",
      "phone": null,
      "speaker": "Saket Bhushan",
      "submitted": "2012-07-09T05:59:27",
      "bio": "The [speaker](http://twitter.com/gamebit07) is  an open source enthusiast, python developer and sysadmin. He currently works on [happyfox](http://www.happyfox.com/)  at [tenmiles](http://www.tenmiles.com). Has developed  applications in python web frameworks(mainly django), and has realized the need for TDD and the shift to BDD, more about him and the subject in the talk.",
      "objective": "The talk shall cover the following points:\r\n\r\n1. Introduction and need to carry out TDD. \r\n2. Insights into django TDD (what features to test, how to optimize code for TDD, available django libraries that make life easier)\r\n3. A demo of unit and integration(selenium) testing for django apps.  \r\n4. The paradigm shift from TDD to the emerging BDD.\r\n5. A demo of Behavior Driven django Development.  \r\n",
      "type": "Talk",
      "id": 10,
      "description": "The Django framework is a fast, flexible and easy to use framework for developing and deploying web sites, apps  and services using Python. TDD has started to get an ubiquitous influence in the django world.  The pain with the complexity of improving our service leads us to revaluate our testing practice which further leads to the discovery of better ways to test applications at the similar/higher scale. \r\n\r\nWhat is a unit test? How can writing them prevent classic testing problems? If you do write them, what trade-offs are you implicitly making? Premature optimization sucks, will propose a simpler, more direct path for getting Django tested. Simpler is important, because it makes possible the creation of a developer-accepted bridge. This talk will also cover tools and strategies that you should employ to cover your codebase. \r\n\r\nI will share my experiences with testing and discuss designing for maintainability and testability. We will look into the appropriate use of testing tools and libraries, profiling your way to testing awesomeness. \r\n\r\nBDD is the bridge between people who can code and people who need code. Clients understand their project but not the code, there should be some means that connects both. BDD extends TDD in an agile environment, it brings in the pattern that seasoned testers discover after few years of experience, we will have an insightful demo of how it can serve you better. "
    },
    {
      "slides": "",
      "votes": 25,
      "name": "9-metaclass-in-python-and-how-it-is-helpful-in-framework-like-django",
      "links": "",
      "title": "Metaclass in Python and how it is helpful in framework like Django",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/9-metaclass-in-python-and-how-it-is-helpful-in-framework-like-django",
      "section": "Core Python",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Akshar Raaj",
      "phone": null,
      "speaker": "Akshar Raaj",
      "submitted": "2012-07-08T19:12:51",
      "bio": "Akshar is a developer at Agiliq. A curios person who wants to know how and why things work the way they work. He has been working on Django, a web framework written in Python, for last one year",
      "objective": "Audience will leave this session with a better understanding of how metaprogramming and other related concepts like \\_\\_new\\_\\_ work in Python.",
      "type": "Talk",
      "id": 9,
      "description": "Many web frameworks written in Python, like Django, heavily use Metaclass. Understanding metaclass will help you understand the internals of your framework and how things work under the hood. \r\nOnce you understand metaclass, you will have a deeper understanding of the framework you use and how Python makes complex things simpler by using metaclass.\r\n\r\nWith metaclass, things look built in rather than bolted upon.\r\n\r\nWe plan to cover following things in this talk\r\n\r\nTalking about method \\_\\_new\\_\\_ for few minutes. Although my assumption will be you are familiar with \\_\\_new\\_\\_ .\r\n\r\nTalking about method type() and verifying that even classes are Objects in Python.\r\n\r\nWe will define a class and verify that even this class is an Object.\r\n\r\n    class A(object):\r\n        pass\r\n\r\nWe will use function type() to verify A is an Object.\r\n\r\n    type(A)\r\n\r\nDocumentation of type() says that type() takes an Object as the argument and returns the class of that Object. It means that if you pass some argument to type() and type() executes successfully without raising an error, then the argument you passed is an Object\r\n\r\nSo, whatever was returned by our last statement is the class of class A and since class A was accepted by type() as an argument, A is an object.\r\n\r\nWhen we see that a class is an Object in Python, we know that this class must be an instance of some other class. This 'other class' is known as metaclass.\r\n\r\nAs we know by now A is an Object, so it must be an instance of some other class. Actually, A is an instance of a class named type. Under the hood, A was created something like A=type() . Actually there were some arguments also passed in this call. So it was something like A=type(arg1, arg2, arg3, arg4). We will see these exact arguments in our talk.\r\n\r\nSo A is an instance of class type and  **class type is the default metaclass**.\r\n\r\nEarlier we used type() as a method to verify that even classes are objects and now we say that type is the default metaclass i.e class of a class. No need to get confused. Based on the number of arguments passed to type, it is figured out whether it needs to be used as a method or a class. We will clarify this in the talk.\r\n\r\nNext we will write a metaclass. Here we will see what all we need to keep in mind to write a metaclass. Say we name this class as MetaClass.\r\n\r\n* A metaclass must extend from class type.\r\n* We need to override method \\_\\_new\\_\\_ of type in this metaclass.\r\n\r\nWe will keep some print statements inside overridden \\_\\_new\\_\\_ to see what arguments were passed to it by the interpreter. We will do some extra operations in this metaclass like adding some additional attributes on a class which is going to be created using this metaclass.\r\n\r\n We will then write another class definition say class A. In this class definition, we will specify that the metaclass we just wrote must be used to create this class. \r\n\r\n    class A(object):\r\n        a = 10\r\n        __metaclass__ = MetaClass\r\n\r\n\r\nWe will see some practical uses of Metaclass. Here we will go through a section of Django code and see how metaclass is useful in such situations.\r\n\r\nWe will see how attributes like \\_meta is available on any Django model we write. Actually all this is accomplished in the metaclass of Django model. We will see how keeping this \\_meta on model helps later while instantiating a model and saving a model."
    },
    {
      "slides": "",
      "votes": 23,
      "name": "8-document-your-code",
      "links": "Details of rst with examples -- http://www.dgplug.org/irclogs/2012/rst-primer/",
      "title": "Document your code",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/8-document-your-code",
      "section": "Software Development Tools",
      "level": "Intermediate",
      "comments": 3,
      "email": null,
      "proposer": "kushaldas",
      "phone": null,
      "speaker": "kushaldas",
      "submitted": "2012-07-05T10:11:52",
      "bio": "Kushal Das is a developer & contributor to various FOSS projects. He is using Python as his primary language for the last 6 years. He is upstream author for various python applications and libraries. He blogs at http://kushaldas.in",
      "objective": "Explaining the requirement of documenting code bases in pythonic way. Showing different tips/tricks people use in real in various upstream projects.",
      "type": "Talk",
      "id": 8,
      "description": "Writing documentation can lead to better code.\r\n-----------------------------------------------------------------\r\nWe will start from why and will go into details of how to document python codebases.\r\n\r\n\r\ntopics in the talk\r\n----------------------\r\n \r\n  * What to write -- What all details a developer should at least add\r\n  * reStructuredText -- a quick review of rst with examples\r\n  * Sphinx -- details of sphinx with example\r\n  * http://readthedocs.org -- How to use readthedocs for your project\r\n"
    },
    {
      "slides": "http://simp.ly/publish/FJPwPc",
      "votes": 17,
      "name": "7-python-the-weird-bits",
      "links": "",
      "title": "Python, the weird bits",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/7-python-the-weird-bits",
      "section": "Core Python",
      "level": "Intermediate",
      "comments": 2,
      "email": null,
      "proposer": "Saager Mhatre",
      "phone": null,
      "speaker": "Saager Mhatre",
      "submitted": "2012-07-03T11:41:28",
      "bio": "Lazy Hacker, Curious Skeptic, Community Herder, Part-time Gamer & Former ThoughtWorker. Currently employed by Vayana to build and maintain cloud-hosted products on Python.\r\n\r\nOver the years I have built applications for banks, internet advertisers, eCommerce giants and publishing houses on a number of popular platforms (as well as a few not-so-popular ones).",
      "objective": "Walk the audience down some of the _slightly stranger_ alleys of our platform to discover corner cases and pitfalls that you never knew existed.",
      "type": "Talk",
      "id": 7,
      "description": "Every language platform has its warts; and I'm sure you'll agree that Python is no exception. Except, over my time working with the language these last 18 months, there have been a quite a few things that hit me sideways... hard! \r\n\r\nThis talk will enumerate some of these elements of the Python platform such as quirks related to:\r\n\r\n* namespaces\r\n* built-in functions\r\n* exception handling\r\n* the object model (Boy, I could do a whole other presentation on just this!)\r\n* generators\r\n* decorators\r\n* metaprogramming\r\n* ... and more\r\n\r\nThis talk is not a diatribe about that features Python is missing or how Python should evolve. It is merely my observation of the [hemispatial neglect](http://zedshaw.com/essays/curing_pythons_neglect.html) prevalent in the Python ecosystem.\r\n\r\nIt is easy to be enamoured by our platform of choice, but it is also important to acknowledge its shortcomings so that we may improve on them."
    },
    {
      "slides": "https://docs.google.com/open?id=0BwWxpNnXIVa7dXctamlWMk90MUU",
      "votes": 12,
      "name": "5-unit-testing-using-mock",
      "links": "",
      "title": "Unit testing using Mock",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/5-unit-testing-using-mock",
      "section": "Software Development Tools",
      "level": "Beginner",
      "comments": 0,
      "email": null,
      "proposer": "Gaurav Sood",
      "phone": null,
      "speaker": "Gaurav Sood",
      "submitted": "2012-06-27T04:28:58",
      "bio": "Self-taught Python programmer and enthusiast, I am a final year Engineering student based in Pune. A FOSS enthusiast for the past 6 years, I am a GNOME lover and am interested in development using GTK with Python as the language of choice. openSUSE lover for its simplicity and power.",
      "objective": "Introduce the Mock library as a powerful unit testing tool",
      "type": "Talk",
      "id": 5,
      "description": "The Mock library in Python enables testing of the code written, using \"Mock\" objects and asserting the results of various operations on those mock objects. It is designed for use with the standard unittest tool in Python, and it turns out to be a powerful test tool\r\n\r\n###Outline of the session:\r\n\r\n###0-5 mins: \r\nIntroduce Unit testing for those who are new to the concept, as well as give an idea of the PyUnit testing framework.\r\n\r\n\r\n###5-10 mins:\r\n Give an idea of the Mock library, introducing the concept of mock objects and their use in the unit testing.\r\n\r\n\r\n###10-20 mins: \r\nA series of short code snippets showing the use of Mock for unit testing\r\n\r\n\r\n###20-25 mins:\r\n Questions, if any"
    },
    {
      "slides": "https://www.speakerdeck.com/u/rudimk/p/python-net",
      "votes": 3,
      "name": "4-python-and-net-a-happy-relationship",
      "links": "",
      "title": "Python and .NET - A happy relationship?",
      "url": "http://in.pycon.org/2012/funnel/pyconindia2012/4-python-and-net-a-happy-relationship",
      "section": "_Others",
      "level": "Intermediate",
      "comments": 0,
      "email": null,
      "proposer": "Rudi MK",
      "phone": null,
      "speaker": "Rudi MK",
      "submitted": "2012-06-26T21:53:57",
      "bio": "I'm currently working as a social media and mobile tech expert, with the Hindustan Times. My job requires me to work with all of HT's web properties, which include Shine.com, Desimartini.com and HTCampus.com. These properties have been written using Django. Further, I worked on the early releases of the IronPython project, which was an open-source initiative spear-headed by Microsoft, in order to port Python onto the .NET Framework.",
      "objective": "The objective of this session is to showcase the fact that with the Dynamic Language Runtime, Python is now a first-class citizen of the .NET ecosystem, with a different name - IronPython.",
      "type": "Talk",
      "id": 4,
      "description": "The session would showcase me running web frameworks such as Django and Web2Py on top of a .NET application stack, as well as providing a performance analysis of sorts. Futher, I'd like to talk about how IronPython can be used to interface between .NET libraries and standard CPython modules. I'll touch base on scripting Rich Internet Apps using Silverlight/Moonlight along with Python, and the open source Gestalt library.\r\n\r\nI'd also like to use this session to talk about a slightly-unrelated subject - compiler construction using IronPython and the DLR, and how the DLR has made language design an easier and more efficient process."
    }
  ],
  "sections": [
    {
      "description": "Language features, Python implementations, Python 3, Standard Library",
      "name": "corepython",
      "title": "Core Python"
    },
    {
      "description": "Embedded Python, Device Interfacing, Robotics",
      "name": "embedded",
      "title": "Embedded/Real-time Python"
    },
    {
      "description": "Deployments, System Configuration, Monitoring\r\n",
      "name": "infrastructure",
      "title": "Infrastructure"
    },
    {
      "description": "Talks/tutorials on Mobile Computing.",
      "name": "mobile",
      "title": "Mobile"
    },
    {
      "description": "Scientific/Numeric Libraries, Cryptography, Data Engineering, Mathematics, Statistics, Visualizations",
      "name": "scientificcomputing",
      "title": "Scientific Computing"
    },
    {
      "description": "GUI programming, Testing tools",
      "name": "devtools",
      "title": "Software Development Tools"
    },
    {
      "description": "Web Frameworks, Concurrency, Databases, NoSQL, Cloud Computing, Restful Interfaces",
      "name": "web",
      "title": "Web Development"
    },
    {
      "description": "Everything else that doesn't fit into the above sections",
      "name": "others",
      "title": "_Others"
    }
  ],
  "space": {
    "status": 5,
    "datelocation": "September 28-30, 2012",
    "name": "pyconindia2012",
    "title": "PyCon India 2012"
  }
}